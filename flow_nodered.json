[
    {
        "id": "0c4c075ff349f3df",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "787a9de19914e089",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "name": "navigation bar",
        "style": {
            "label": true
        },
        "nodes": [
            "f279765967c6cf6b",
            "039fbd569a1edd1b",
            "cb4e65e34af49146",
            "d4a639ae5c6c7b95",
            "87cb97affd762610",
            "43c47dbf5169229a",
            "1dd5a1004e69f032",
            "22cf1ee7fc2deedd",
            "10bf23320515a953",
            "84cb96bc14679f8c",
            "7dd5ba394ee10d02"
        ],
        "x": 4008,
        "y": 253,
        "w": 1644,
        "h": 594
    },
    {
        "id": "4e26cb95b01eb7a8",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "name": "konsumsi energi",
        "style": {
            "label": true
        },
        "nodes": [
            "150c9172fce072ec",
            "87f35e0b01c7681d",
            "4a6b46e141fdc19a",
            "dda4d4343307a6fe",
            "ed7a7888e13d47ef",
            "9e9bd772b2a5dcef",
            "07ef1ba22071d4d3",
            "f5ed01f8bae3a4d3",
            "1cd08557dec12fd6",
            "716c95bee734ec0f"
        ],
        "x": 54,
        "y": 73,
        "w": 1578,
        "h": 314
    },
    {
        "id": "bb63037382781e3d",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "name": "kondisi lingkungan",
        "style": {
            "label": true
        },
        "nodes": [
            "e53fa2cd56f1d535",
            "0e4f85dac1282843",
            "024db42074498add",
            "5b4d4068e71334bc",
            "c383769629ff1da1",
            "42ae4492f6052e40",
            "d114d053399f399a",
            "9c41c3889276b7bb",
            "42fd43f387be2a78",
            "6f7b96b52af0692e",
            "ceae976dbb982cbd",
            "b5b7110ad4d379d6",
            "62b83121a736d020"
        ],
        "x": 34,
        "y": 653,
        "w": 1218,
        "h": 534
    },
    {
        "id": "8c182378a8237863",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "name": "detail konsumsi",
        "style": {
            "label": true
        },
        "nodes": [
            "a33dece9164e930b",
            "f11f2aa3613dd2fd",
            "89f46352c472bcf4",
            "52f3a1a10458c59d",
            "6d0a05dfa803b2de",
            "0cea21f3d5e7d8f0",
            "d1e095ead57dd986",
            "e35763541fa6ca60",
            "143214739de84a08",
            "4fd6cc10a88294fc",
            "56da0dc0ff375c85",
            "8e480b4983a00026",
            "74e7e70ef83bf0dd",
            "34fd81578772c2c3",
            "cfbc6db43468f215",
            "8114799feb28eb77",
            "f7022fe2969225c8",
            "3a3d19f483e10800",
            "9b09a74aebe142e5",
            "b05e04e032fa04f1",
            "a40811912c53b3d6",
            "bdccb4ca26570d35",
            "5fd222fc7fe8d2d2",
            "1e167fb007459d62",
            "4ede60d68904d235"
        ],
        "x": 1494,
        "y": 413,
        "w": 1818,
        "h": 934
    },
    {
        "id": "f7ba49029b5ddeed",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "name": "historical data",
        "style": {
            "label": true
        },
        "nodes": [
            "adbcdfbc54a909b1",
            "1dea968f60383be2",
            "ecbd287024627a0d",
            "bbb504d6f672b6d3",
            "dd1333537483d074",
            "dde7f22c61d652a8",
            "3b8c3ecad380acd6",
            "970ef19718364aa4",
            "46824ee568b9461f",
            "6168b10f50e6a2f3",
            "86ad28517cddcb59",
            "8d3ece8e834a9bdb",
            "cf03713852ece1c1",
            "99a378b909ea5bca",
            "0ce43c62235dac44",
            "0bc0726ef06a8d63",
            "7406a020aca10bf3",
            "1fa23983bc9ff304",
            "f34531c1f3354c6e",
            "cb842c0b08b4f351",
            "019b56bbd47bd417",
            "9afd477070b02522"
        ],
        "x": 214,
        "y": 3659,
        "w": 1552,
        "h": 508
    },
    {
        "id": "abd55887175c73a6",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "name": "kontrol",
        "style": {
            "label": true
        },
        "nodes": [
            "9c7e84f3a00d654a",
            "1cd73f792b53d374",
            "a25c2de5bbade2c4",
            "4a231e647da17552",
            "9438f53d222bc310",
            "acf7739334e8cfc0",
            "5d5b0b65aea72646",
            "17c270c2e48c23e7",
            "774115c98815d3b2",
            "20aad38880493d10",
            "b171eb29d029cf32",
            "1ad230d9aa414486",
            "2ed5c5f398d98802",
            "7a23cd6bc4005aa9",
            "86f1103a9be0f9fc",
            "d08646a1c6e8597e",
            "c39fc7b5e9a078d3",
            "83c2f7696324bc71",
            "9e63b4a70f61af1d",
            "3785bb257102d584",
            "f860b2a4b43cf125"
        ],
        "x": 14,
        "y": 1213,
        "w": 1778,
        "h": 474
    },
    {
        "id": "645828b07d30eca1",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "name": "menampilkan gambar sesuai kombinasi lampu",
        "style": {
            "label": true
        },
        "nodes": [
            "9d1a2184508eafb5",
            "ce34b817250d4340",
            "f0431ce946064f19",
            "71066ffcd6971d84",
            "6204329e4ee7db8a",
            "0e280c66a0ce59cc",
            "a8a9dd53bdcd4aad",
            "3ed043c359fa14e2",
            "b09ce0aec1db3b8b",
            "0954ba9c414630b3",
            "ece629d190e90f1b",
            "05bb609cfc8371e5",
            "9146f96d3ab7791a",
            "ed1a4e80d9a67870",
            "7296238294f41daa",
            "b936e9d72f9f1516",
            "bd3fb8a662abb9a4",
            "ed5c7f59f9bf8643",
            "7b89f993b676a881",
            "e46671e5a231d092",
            "7289e9dda1c190f7"
        ],
        "x": 54,
        "y": 4239,
        "w": 1172,
        "h": 322
    },
    {
        "id": "1cd08557dec12fd6",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "tampilan dashboard",
        "style": {
            "label": true
        },
        "nodes": [
            "fbf2bd1c7cf1b0c6",
            "cf661a0adaaeb2fa",
            "64734a8a7c4e90f2",
            "f754a544b9026392",
            "6cc4ac53ccb43e45",
            "23c2f3911ac0297a",
            "a0676425745cc9fa"
        ],
        "x": 1054,
        "y": 99,
        "w": 552,
        "h": 262
    },
    {
        "id": "3a3d19f483e10800",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "query influxdb",
        "style": {
            "label": true
        },
        "nodes": [
            "c6e343d80e290fb1",
            "34451b42e31095a0",
            "0efd8fc459b17472",
            "48b6c0aab03170ae",
            "bc1cfb77983cf8c0",
            "156baf576586dcf4",
            "55e61a2f3b7e9274",
            "8e1d0958f156a572",
            "e3f84e33b8a018fd",
            "cd8df39d598e3638",
            "bacb03562f8a73bc",
            "b11cef944e3b6ed5",
            "c3a4ca517f56aa88",
            "c31608f1c4772aff",
            "3fae5e631bf29b28",
            "7cdfd1080d8ea505",
            "49b796a2a8a53b0d",
            "8b45316b02f52a38",
            "1d02745cff5bddf2",
            "c448052b48af8b53",
            "e41283aac04daf74",
            "13177c5dd237c32f",
            "9b36f91847638faa"
        ],
        "x": 2054,
        "y": 439,
        "w": 762,
        "h": 882
    },
    {
        "id": "9b09a74aebe142e5",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "tampilan dahsboard",
        "style": {
            "label": true
        },
        "nodes": [
            "ef67349ec244aa80",
            "d95a0dec212f5ad5",
            "05fe316bbc8496a7",
            "682564fc9d7a171d",
            "31b1c58d4c40706f",
            "1945ec49053382a2"
        ],
        "x": 2894,
        "y": 579,
        "w": 392,
        "h": 282
    },
    {
        "id": "b05e04e032fa04f1",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "cek selection button group",
        "style": {
            "label": true
        },
        "nodes": [
            "91aa588aaeaf3293",
            "ebb3c9f11e046c4c",
            "383f18af5a5adc01",
            "4f33cefc8a1f57bc"
        ],
        "x": 1714,
        "y": 819,
        "w": 312,
        "h": 162
    },
    {
        "id": "ceae976dbb982cbd",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "tampilan dashboard",
        "style": {
            "label": true
        },
        "nodes": [
            "05da9a8e4a72bda5",
            "ed4ed763270f0f97",
            "b04868471df4dca1",
            "f8b60ca5bff1527c",
            "1385463e91656edb",
            "063c776396257301",
            "a54a8e807666e6a1",
            "276eef1b9b55b1ca",
            "a5456a41bf933a02",
            "f92d6d60ce59a9be",
            "9657fb3b01aa39c9",
            "bddf9a277ccd1569",
            "c193deb711500181"
        ],
        "x": 774,
        "y": 679,
        "w": 452,
        "h": 482
    },
    {
        "id": "b5b7110ad4d379d6",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "write to influxdb",
        "style": {
            "label": true
        },
        "nodes": [
            "8f9223767f3e95b4",
            "989a091336cd6d9c",
            "cce3be65ee22580e",
            "f821cb8794748932"
        ],
        "x": 534,
        "y": 679,
        "w": 212,
        "h": 422
    },
    {
        "id": "cb842c0b08b4f351",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "download data as csv",
        "style": {
            "label": true
        },
        "nodes": [
            "9fd11570.93e658",
            "890f4965.8663e8",
            "1cee4cc9.8a3a13",
            "d8d2e890.9126e8",
            "0d1ced6f47b7e9f2",
            "300f4c4132f042a5",
            "12f9bea5958df417",
            "d4408da90c6a252e"
        ],
        "x": 594,
        "y": 3999,
        "w": 1052,
        "h": 142
    },
    {
        "id": "019b56bbd47bd417",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "norifikasi",
        "style": {
            "label": true
        },
        "nodes": [
            "af6db05e4ff33d66",
            "887ba660358910e6",
            "13706bdee0073a0c",
            "5c248f00d0a47a87"
        ],
        "x": 714,
        "y": 3719,
        "w": 392,
        "h": 122
    },
    {
        "id": "c39fc7b5e9a078d3",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "notifikasi",
        "style": {
            "label": true
        },
        "nodes": [
            "ed0894fb748725ca",
            "958a52f1af9e40b4",
            "acf9f42adf650d73",
            "7ff56422aff11506",
            "54faf4acaf3cb869"
        ],
        "x": 1074,
        "y": 1519,
        "w": 692,
        "h": 142
    },
    {
        "id": "83c2f7696324bc71",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "pengecekan apakah berhasil menyalakan atau mematikan",
        "style": {
            "label": true
        },
        "nodes": [
            "0894c49948fc64f7",
            "7fc628411b807ea0",
            "ed678fe46f78f827",
            "ea4267b7a874501b",
            "51a3e35e16caba8b",
            "22a35be3783efcd2",
            "a4c4998235748307",
            "ca4740fe5dd0bd6f"
        ],
        "x": 204,
        "y": 1479,
        "w": 842,
        "h": 142
    },
    {
        "id": "9e63b4a70f61af1d",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "tampilan dashboard",
        "style": {
            "label": true
        },
        "nodes": [
            "9c3ef62f35305988",
            "983360d0fecd2eac",
            "3a2d2ef80b179ea7",
            "6af26037e6d34144"
        ],
        "x": 634,
        "y": 1239,
        "w": 232,
        "h": 222
    },
    {
        "id": "84cb96bc14679f8c",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "name": "mengatur jam kerja",
        "style": {
            "label": true
        },
        "nodes": [
            "6c719948f3f05b6e",
            "a772b58dac229bc6",
            "59834c4a243f20e1",
            "afc3b86f193f2f9f",
            "a3b06288849b7c3c",
            "3bda8b55e564c31c",
            "8a06015ea53e1916",
            "1193f15cba69e019",
            "d5043759c34b72e6",
            "2616735201f4059a",
            "bb87971e1c0826b6",
            "6931191907646130",
            "f203b5515be86524",
            "20ba707d908605c9"
        ],
        "x": 4034,
        "y": 619,
        "w": 1592,
        "h": 202
    },
    {
        "id": "7dd5ba394ee10d02",
        "type": "group",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "name": "membaca jam kerja saat ini",
        "style": {
            "label": true
        },
        "nodes": [
            "b79ee89fa022342f",
            "596ff8bc0cf750b2",
            "266d808c39b7242c",
            "9217184b2b53b492",
            "32553f2fe7a47e6f",
            "4ac2a07fa70609cf",
            "ba1df04edd8ba9d3",
            "b93ab88a8d1b195c",
            "517e0e8e8b4af996",
            "59b9d734819ebbce",
            "3f8edcde2cb37b39",
            "85b26462416fe5ab"
        ],
        "x": 4734,
        "y": 279,
        "w": 892,
        "h": 302
    },
    {
        "id": "fe512f128278565a",
        "type": "ui-template",
        "z": "0c4c075ff349f3df",
        "group": "",
        "page": "",
        "ui": "cd267d1a55d62fea",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": ".custom-card-energy {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n    border-radius: 20px;\n    border: 1px solid #00000017;\n    padding: 15px;\n    margin: 0px 10px 10px 10px;\n}\n\n.group-title {\n    text-align: center;\n    font-weight: bold;\n}\n\n.custom-card-temp {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    border: 1px solid #00000017;\n    padding: 8px;\n    \n}\n\n.chart{\n    margin-right: 20px;\n    margin-bottom: 20px;\n}\n\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "site:style",
        "className": "",
        "x": 1780,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "fbf2bd1c7cf1b0c6",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "1cd08557dec12fd6",
        "group": "cdf9cafb1c03a171",
        "order": 1,
        "width": "2",
        "height": "1",
        "name": "Today",
        "label": "<p style=\"color: black; font-size: 18px;\">Today</p>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "30",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-energy",
        "x": 1370,
        "y": 200,
        "wires": []
    },
    {
        "id": "cf661a0adaaeb2fa",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "1cd08557dec12fd6",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 20px;\">{{unit_rp}}</span>\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">{{unit_kwh}}</span>\n</p>",
        "output": "str",
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "fbf2bd1c7cf1b0c6"
            ]
        ]
    },
    {
        "id": "64734a8a7c4e90f2",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "1cd08557dec12fd6",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 20px;\">{{unit_rp}}</span>\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">{{unit_kwh}}</span>\n</p>",
        "output": "str",
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "f754a544b9026392"
            ]
        ]
    },
    {
        "id": "ef67349ec244aa80",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "9b09a74aebe142e5",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 20px;\">{{unit_rp}}</span>\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">{{unit_kwh}}</span>\n</p>",
        "output": "str",
        "x": 3030,
        "y": 620,
        "wires": [
            [
                "05fe316bbc8496a7"
            ]
        ]
    },
    {
        "id": "d95a0dec212f5ad5",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "9b09a74aebe142e5",
        "group": "e7dfb8239d607d29",
        "order": 5,
        "width": "2",
        "height": "1",
        "name": "AC",
        "label": "<p>AC</p>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-energy",
        "x": 3190,
        "y": 680,
        "wires": []
    },
    {
        "id": "05fe316bbc8496a7",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "9b09a74aebe142e5",
        "group": "e7dfb8239d607d29",
        "order": 6,
        "width": 2,
        "height": "1",
        "name": "Station",
        "label": "<p>Station</p>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-energy",
        "x": 3200,
        "y": 620,
        "wires": []
    },
    {
        "id": "78104d7ed212dd8a",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "Power Meter Station",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "104",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "h",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 190,
        "y": 500,
        "wires": [
            [
                "0764e7591c582ce4"
            ],
            []
        ]
    },
    {
        "id": "542c708cb4e2a787",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "Power Meter AC",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "100",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "h",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 560,
        "wires": [
            [
                "c562e575fa51b8f4"
            ],
            []
        ]
    },
    {
        "id": "c562e575fa51b8f4",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "to float",
        "func": "let data = msg.payload;\n\nif (data.length >= 2) {\n    let buffer = Buffer.alloc(4);\n\n    //Little Endian\n    buffer.writeUInt16LE(data[1], 0);\n    buffer.writeUInt16LE(data[0], 2); \n\n    let floatVal = buffer.readFloatLE(0);\n\n    msg.payload = parseFloat(floatVal.toFixed(3));\n} else {\n    msg.payload = \"Error: Data tidak cukup\";\n}\n\nmsg.topic = \"kWh AC\"\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 560,
        "wires": [
            [
                "956a7fb75a6f06ed",
                "3d06c389dff3e556"
            ]
        ]
    },
    {
        "id": "ed4ed763270f0f97",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "group": "22816c7c4b8b217f",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "temp near ac",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-temp",
        "x": 1090,
        "y": 760,
        "wires": []
    },
    {
        "id": "9657fb3b01aa39c9",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">°C</span>\n</p>",
        "output": "str",
        "x": 890,
        "y": 760,
        "wires": [
            [
                "ed4ed763270f0f97"
            ]
        ]
    },
    {
        "id": "b04868471df4dca1",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "group": "22816c7c4b8b217f",
        "order": 1,
        "width": "4",
        "height": "1",
        "name": "Near AC Title",
        "label": "<p style=\"margin-top:10px; margin-left: 20px; font-weight: bold\">Near AC</p>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 1090,
        "y": 720,
        "wires": []
    },
    {
        "id": "f8b60ca5bff1527c",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "group": "22816c7c4b8b217f",
        "order": 3,
        "width": "2",
        "height": "1",
        "name": "hum Near AC",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-temp",
        "x": 1100,
        "y": 820,
        "wires": []
    },
    {
        "id": "f92d6d60ce59a9be",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">%</span>\n</p>",
        "output": "str",
        "x": 890,
        "y": 820,
        "wires": [
            [
                "f8b60ca5bff1527c"
            ]
        ]
    },
    {
        "id": "e53fa2cd56f1d535",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "Temp Near AC",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "106",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "h",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 760,
        "wires": [
            [
                "024db42074498add"
            ],
            []
        ]
    },
    {
        "id": "0e4f85dac1282843",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "Hum Near AC",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "107",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "h",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 820,
        "wires": [
            [
                "5b4d4068e71334bc"
            ],
            []
        ]
    },
    {
        "id": "024db42074498add",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "take value from array",
        "func": "msg.payload=msg.payload[0]/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 760,
        "wires": [
            [
                "9657fb3b01aa39c9",
                "8f9223767f3e95b4"
            ]
        ]
    },
    {
        "id": "5b4d4068e71334bc",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "take value from array",
        "func": "msg.payload=msg.payload[0]/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 820,
        "wires": [
            [
                "f92d6d60ce59a9be",
                "989a091336cd6d9c"
            ]
        ]
    },
    {
        "id": "1385463e91656edb",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "group": "22816c7c4b8b217f",
        "order": 5,
        "width": "2",
        "height": "1",
        "name": "temp near Station",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-temp",
        "x": 1110,
        "y": 960,
        "wires": []
    },
    {
        "id": "bddf9a277ccd1569",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">°C</span>\n</p>",
        "output": "str",
        "x": 890,
        "y": 960,
        "wires": [
            [
                "1385463e91656edb"
            ]
        ]
    },
    {
        "id": "063c776396257301",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "group": "22816c7c4b8b217f",
        "order": 6,
        "width": "2",
        "height": "1",
        "name": "hum Near station",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-temp",
        "x": 1110,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c193deb711500181",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">%</span>\n</p>",
        "output": "str",
        "x": 890,
        "y": 1020,
        "wires": [
            [
                "063c776396257301"
            ]
        ]
    },
    {
        "id": "c383769629ff1da1",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "Temp Near Station",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "108",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "h",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 960,
        "wires": [
            [
                "d114d053399f399a"
            ],
            []
        ]
    },
    {
        "id": "42ae4492f6052e40",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "Hum Near Station",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "109",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "h",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "9c41c3889276b7bb"
            ],
            []
        ]
    },
    {
        "id": "d114d053399f399a",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "take value from array",
        "func": "msg.payload=msg.payload[0]/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 960,
        "wires": [
            [
                "bddf9a277ccd1569",
                "cce3be65ee22580e"
            ]
        ]
    },
    {
        "id": "9c41c3889276b7bb",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "take value from array",
        "func": "msg.payload=msg.payload[0]/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1020,
        "wires": [
            [
                "c193deb711500181",
                "f821cb8794748932",
                "62b83121a736d020"
            ]
        ]
    },
    {
        "id": "a54a8e807666e6a1",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "group": "22816c7c4b8b217f",
        "order": 4,
        "width": "4",
        "height": "1",
        "name": "Near Station Title",
        "label": "<p style=\"margin-top:10px; margin-left: 20px; font-weight: bold\">Near Station</p>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 1110,
        "y": 920,
        "wires": []
    },
    {
        "id": "276eef1b9b55b1ca",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "group": "22816c7c4b8b217f",
        "order": 7,
        "width": "4",
        "height": "1",
        "name": "Light Intensity Title",
        "label": "<p style=\"margin-top:10px; margin-left: 20px; font-weight: bold\">Light Intensity</p>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 1110,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a5456a41bf933a02",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "group": "22816c7c4b8b217f",
        "order": 8,
        "width": "2",
        "height": "1",
        "name": "light intensity",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-temp",
        "x": 1090,
        "y": 1120,
        "wires": []
    },
    {
        "id": "05da9a8e4a72bda5",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "ceae976dbb982cbd",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">lux</span>\n</p>",
        "output": "str",
        "x": 890,
        "y": 1120,
        "wires": [
            [
                "a5456a41bf933a02"
            ]
        ]
    },
    {
        "id": "42fd43f387be2a78",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "take value from array",
        "func": "msg.payload=msg.payload[0]/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1120,
        "wires": [
            [
                "05da9a8e4a72bda5"
            ]
        ]
    },
    {
        "id": "3a2d2ef80b179ea7",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "9e63b4a70f61af1d",
        "group": "e4ad38938390eea8",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 730,
        "y": 1280,
        "wires": []
    },
    {
        "id": "983360d0fecd2eac",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "g": "9e63b4a70f61af1d",
        "name": "",
        "label": " ",
        "group": "e4ad38938390eea8",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 730,
        "y": 1380,
        "wires": [
            [
                "4a231e647da17552"
            ]
        ]
    },
    {
        "id": "55890ab1b90b2013",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "2df030eec0b963f9",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 890,
        "y": 1720,
        "wires": []
    },
    {
        "id": "d60ea610ce92a266",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "2df030eec0b963f9",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 680,
        "y": 1840,
        "wires": [
            [
                "c2b88bf9eb3ab354"
            ]
        ]
    },
    {
        "id": "99534a78575c19a7",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "115deef34be5a4ca",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 870,
        "y": 2000,
        "wires": []
    },
    {
        "id": "2bae3c29fcb58fa3",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "115deef34be5a4ca",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 680,
        "y": 2120,
        "wires": [
            [
                "d0b6b7991e04de50"
            ]
        ]
    },
    {
        "id": "bcb279ce82b13d5c",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "4f8b5f8971b98bac",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 870,
        "y": 2300,
        "wires": []
    },
    {
        "id": "ae979b494ec6934c",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "4f8b5f8971b98bac",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 680,
        "y": 2400,
        "wires": [
            [
                "753dd0ea6ca394ef"
            ]
        ]
    },
    {
        "id": "53c531807d23486c",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "22eab354af0683f3",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 890,
        "y": 2580,
        "wires": []
    },
    {
        "id": "2f5921b0cbceeaed",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "22eab354af0683f3",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 680,
        "y": 2680,
        "wires": [
            [
                "da892309e1ed9f1f"
            ]
        ]
    },
    {
        "id": "9c3ef62f35305988",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "9e63b4a70f61af1d",
        "group": "e4ad38938390eea8",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Station Tube Lamp ",
        "label": "Station Tube Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 750,
        "y": 1320,
        "wires": []
    },
    {
        "id": "fa84c39bc7a22269",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "2df030eec0b963f9",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Station Bulb Lamp",
        "label": "Station Bulb Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 910,
        "y": 1760,
        "wires": []
    },
    {
        "id": "0551f433836e2af7",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "115deef34be5a4ca",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Central Lamp",
        "label": "Central Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 880,
        "y": 2040,
        "wires": []
    },
    {
        "id": "3412dac4a31cd7ce",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "4f8b5f8971b98bac",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Office Bulb Lamp",
        "label": "Office Bulb Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 890,
        "y": 2340,
        "wires": []
    },
    {
        "id": "fd8fb1c6116a7ad0",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "22eab354af0683f3",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Office Tube Lamp",
        "label": "Office Tube Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 910,
        "y": 2620,
        "wires": []
    },
    {
        "id": "9c7e84f3a00d654a",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "220V - 112",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "112",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 120,
        "y": 1380,
        "wires": [
            [
                "a25c2de5bbade2c4"
            ],
            []
        ]
    },
    {
        "id": "1cd73f792b53d374",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "take value from array",
        "func": "let status = msg.payload[0];\nif(status == 0){\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1380,
        "wires": [
            [
                "983360d0fecd2eac",
                "6af26037e6d34144"
            ]
        ]
    },
    {
        "id": "6342890af311ace1",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "220V - 113",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "113",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 100,
        "y": 1840,
        "wires": [
            [
                "da5143b5690aa5da"
            ],
            []
        ]
    },
    {
        "id": "a3141c27e66e8f0f",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "take value from array",
        "func": "let status = msg.payload[0];\nif(status == 0){\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1840,
        "wires": [
            [
                "d60ea610ce92a266",
                "8b6e7eb7a12bec69"
            ]
        ]
    },
    {
        "id": "e49b5418942969fe",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "220V - 114",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "114",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 100,
        "y": 2100,
        "wires": [
            [
                "06dcd43cf1e0fb7b"
            ],
            []
        ]
    },
    {
        "id": "5c3984b8f3576d64",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "take value from array",
        "func": "let status = msg.payload[0];\nif(status == 0){\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2120,
        "wires": [
            [
                "2bae3c29fcb58fa3",
                "d32a4f014238a9b1"
            ]
        ]
    },
    {
        "id": "11abd04435e4e58a",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "220V - 115",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "115",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 2400,
        "wires": [
            [
                "0a0e9004a70783f8"
            ],
            []
        ]
    },
    {
        "id": "80c5373ac8a718aa",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "take value from array",
        "func": "let status = msg.payload[0];\nif(status == 0){\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2400,
        "wires": [
            [
                "ae979b494ec6934c",
                "e12878f51a1173da"
            ]
        ]
    },
    {
        "id": "429819d4c0f7b9f4",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "220V - 116",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "116",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 2680,
        "wires": [
            [
                "4f7d7143ed588598"
            ],
            []
        ]
    },
    {
        "id": "5a46d9442a8fc6fa",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "take value from array",
        "func": "let status = msg.payload[0];\nif(status == 0){\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2680,
        "wires": [
            [
                "2f5921b0cbceeaed",
                "2da917b6875f605c"
            ]
        ]
    },
    {
        "id": "f754a544b9026392",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "1cd08557dec12fd6",
        "group": "cdf9cafb1c03a171",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "This Month",
        "label": "<p style=\"color: black; font-size: 18px;\">This Month</p>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "30",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-energy",
        "x": 1390,
        "y": 140,
        "wires": []
    },
    {
        "id": "cce3be65ee22580e",
        "type": "influxdb out",
        "z": "0c4c075ff349f3df",
        "g": "b5b7110ad4d379d6",
        "influxdb": "97f0473747ed2726",
        "name": "in test_temp_st",
        "measurement": "test_temp_st",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "sslab",
        "bucket": "ssl",
        "x": 640,
        "y": 920,
        "wires": []
    },
    {
        "id": "f821cb8794748932",
        "type": "influxdb out",
        "z": "0c4c075ff349f3df",
        "g": "b5b7110ad4d379d6",
        "influxdb": "97f0473747ed2726",
        "name": "test_hum_st",
        "measurement": "test_hum_st",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "sslab",
        "bucket": "ssl",
        "x": 630,
        "y": 1060,
        "wires": []
    },
    {
        "id": "8f9223767f3e95b4",
        "type": "influxdb out",
        "z": "0c4c075ff349f3df",
        "g": "b5b7110ad4d379d6",
        "influxdb": "97f0473747ed2726",
        "name": "test_temp_ac",
        "measurement": "test_temp_ac",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "sslab",
        "bucket": "ssl",
        "x": 640,
        "y": 720,
        "wires": []
    },
    {
        "id": "989a091336cd6d9c",
        "type": "influxdb out",
        "z": "0c4c075ff349f3df",
        "g": "b5b7110ad4d379d6",
        "influxdb": "97f0473747ed2726",
        "name": "test_hum_ac",
        "measurement": "test_hum_ac",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "sslab",
        "bucket": "ssl",
        "x": 630,
        "y": 860,
        "wires": []
    },
    {
        "id": "409bf6a350edc8e5",
        "type": "influxdb out",
        "z": "0c4c075ff349f3df",
        "influxdb": "97f0473747ed2726",
        "name": "test_kwh_st",
        "measurement": "test_kwh_st",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "sslab",
        "bucket": "ssl",
        "x": 550,
        "y": 460,
        "wires": []
    },
    {
        "id": "3d06c389dff3e556",
        "type": "influxdb out",
        "z": "0c4c075ff349f3df",
        "influxdb": "97f0473747ed2726",
        "name": "test_kwh_ac",
        "measurement": "test_kwh_ac",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "sslab",
        "bucket": "ssl",
        "x": 530,
        "y": 600,
        "wires": []
    },
    {
        "id": "a25c2de5bbade2c4",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 270,
        "y": 1380,
        "wires": [
            [
                "1cd73f792b53d374",
                "2ed5c5f398d98802"
            ]
        ]
    },
    {
        "id": "06dcd43cf1e0fb7b",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 240,
        "y": 2120,
        "wires": [
            [
                "5c3984b8f3576d64",
                "1620a25e71d4879e"
            ]
        ]
    },
    {
        "id": "4a231e647da17552",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "Check ON/OFF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 960,
        "y": 1380,
        "wires": [
            [
                "9438f53d222bc310"
            ],
            [
                "5d5b0b65aea72646"
            ]
        ]
    },
    {
        "id": "9438f53d222bc310",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1360,
        "wires": [
            [
                "acf7739334e8cfc0"
            ]
        ]
    },
    {
        "id": "acf7739334e8cfc0",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "200 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "200",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1300,
        "y": 1360,
        "wires": [
            [
                "b171eb29d029cf32",
                "d08646a1c6e8597e"
            ],
            []
        ]
    },
    {
        "id": "5d5b0b65aea72646",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1420,
        "wires": [
            [
                "17c270c2e48c23e7"
            ]
        ]
    },
    {
        "id": "17c270c2e48c23e7",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "201 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "201",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1310,
        "y": 1420,
        "wires": [
            [
                "774115c98815d3b2",
                "86f1103a9be0f9fc"
            ],
            []
        ]
    },
    {
        "id": "774115c98815d3b2",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 1420,
        "wires": [
            [
                "20aad38880493d10"
            ]
        ]
    },
    {
        "id": "20aad38880493d10",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "201 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "201",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1630,
        "y": 1420,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b171eb29d029cf32",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 1360,
        "wires": [
            [
                "1ad230d9aa414486"
            ]
        ]
    },
    {
        "id": "1ad230d9aa414486",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "200 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "200",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1620,
        "y": 1360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4086946ba464d84b",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "influxdb": "97f0473747ed2726",
        "name": "this month kwh query",
        "query": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: 1mo))\n  |> filter(fn: (r) => \n    r[\"_measurement\"] == \"test_kwh_ac_delta\" or \n    r[\"_measurement\"] == \"test_kwh_st_delta\"\n  )\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: 1d, fn: sum, createEmpty: false)\n  |> group()\n  |> sum(column: \"_value\") ",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 520,
        "y": 140,
        "wires": [
            [
                "07ef1ba22071d4d3"
            ]
        ]
    },
    {
        "id": "150c9172fce072ec",
        "type": "inject",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "4086946ba464d84b",
                "4a6b46e141fdc19a",
                "311e04cbf5b47d84"
            ]
        ]
    },
    {
        "id": "956a7fb75a6f06ed",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "get delta",
        "func": "let current = msg.payload;\nlet last = context.get('last_kwh_ac', 'file') || 0;\n\nlet delta = parseFloat((current - last).toFixed(3));\n\nif (delta < 0) {\n    msg.payload = 0;\n    return msg;\n}\n\ncontext.set('last_kwh_ac', current, 'file');\n\nmsg.payload = delta;\nreturn msg;\n\n\n\n// let current = msg.payload;\n// let last = context.get('last_kwh_ac', 'file') || 0;\n\n// let delta = parseFloat((current - last).toFixed(3));\n\n// context.set('last_kwh_ac', current, 'file');\n\n// msg.payload = delta;\n\n// return msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 560,
        "wires": [
            [
                "bf4e8787f009415c"
            ]
        ]
    },
    {
        "id": "0764e7591c582ce4",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "to float",
        "func": "let data = msg.payload;\n\nif (data.length >= 2) {\n    let buffer = Buffer.alloc(4);\n\n    buffer.writeUInt16LE(data[1], 0);\n    buffer.writeUInt16LE(data[0], 2); \n\n    let floatVal = buffer.readFloatLE(0);\n\n    msg.payload = parseFloat(floatVal.toFixed(3));\n} else {\n    msg.payload = \"Error: Data tidak cukup\";\n}\nmsg.topic = \"kWh Station\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 500,
        "wires": [
            [
                "c786e2335f0d754d",
                "409bf6a350edc8e5"
            ]
        ]
    },
    {
        "id": "c786e2335f0d754d",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "get delta",
        "func": "let current = msg.payload;\nlet last = context.get('last_kwh_st', 'file') || 0;\n\nlet delta = parseFloat((current - last).toFixed(3));\n\nif (delta < 0) {\n    msg.payload = 0;\n    return msg;\n}\n\ncontext.set('last_kwh_st', current, 'file');\n\nmsg.payload = delta;\nreturn msg;\n\n\n\n\n// let current = msg.payload;\n// let last = context.get('last_kwh_st', 'file') || 0;\n\n// let delta = parseFloat((current - last).toFixed(3));\n\n// context.set('last_kwh_st', current, 'file');\n\n// msg.payload = delta;\n\n// return msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 500,
        "wires": [
            [
                "f1dca9b42b0b45a2"
            ]
        ]
    },
    {
        "id": "bf4e8787f009415c",
        "type": "influxdb out",
        "z": "0c4c075ff349f3df",
        "influxdb": "97f0473747ed2726",
        "name": "test_kwh_ac_delta",
        "measurement": "test_kwh_ac_delta",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "sslab",
        "bucket": "ssl",
        "x": 750,
        "y": 560,
        "wires": []
    },
    {
        "id": "f1dca9b42b0b45a2",
        "type": "influxdb out",
        "z": "0c4c075ff349f3df",
        "influxdb": "97f0473747ed2726",
        "name": "test_kwh_st_delta",
        "measurement": "test_kwh_st_delta",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "sslab",
        "bucket": "ssl",
        "x": 770,
        "y": 500,
        "wires": []
    },
    {
        "id": "a33dece9164e930b",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "parsing monthly data - ac",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Buat map tanggal 1–31 dengan default 0\nlet resultMap = {};\nfor (let i = 1; i <= 31; i++) {\n    resultMap[i.toString()] = 0;\n}\n\n// Hapus data terakhir (opsional, hapus baris ini jika tidak diperlukan)\nif (data.length > 1) {\n    data.pop(); // buang elemen terakhir\n}\n\n// Geser tanggal -1 hari (sesuaikan zona WIB) dan jumlahkan value\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    dateObj.setDate(dateObj.getDate() - 1); // geser 1 hari ke belakang untuk WIB\n    let tanggal = dateObj.getDate().toString();\n    let value = parseFloat(data[i]._value?.toFixed(2) || 0);\n\n    if (!isNaN(value)) {\n        resultMap[tanggal] += value;\n    } else {\n        node.warn('Invalid value at index ' + i + ': ' + JSON.stringify(data[i]));\n    }\n}\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 1; i <= 31; i++) {\n    let value = resultMap[i.toString()];\n    let chartValue;\n\n    if (display_mode === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        chartValue = (value * kwh_price).toFixed(2)\n    }\n\n    result.push({\n        x: i.toString(), // label sumbu X\n        y: parseFloat(chartValue), // nilai Y (konversi ke number untuk chart)\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh AC\"; // Can be updated dynamically if needed\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 960,
        "wires": [
            [
                "4ede60d68904d235"
            ]
        ]
    },
    {
        "id": "143214739de84a08",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "clear chart",
        "func": "msg.payload=[]\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 780,
        "wires": [
            [
                "bdccb4ca26570d35"
            ]
        ]
    },
    {
        "id": "f11f2aa3613dd2fd",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "parsing yearly data - ac",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Validasi input\nif (!Array.isArray(data)) {\n    data = [];\n}\n\n// Buat map bulan 1–12 dengan default 0\nlet resultMap = {};\nfor (let i = 1; i <= 12; i++) {\n    resultMap[i.toString()] = 0;\n}\n\n// Jumlahkan value berdasarkan bulan dengan penyesuaian WIB\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    if (isNaN(dateObj.getTime())) {\n        continue;\n    }\n    dateObj.setHours(dateObj.getHours() + 7); // Sesuaikan ke WIB (UTC+7)\n    \n    let bulan;\n    if (i === data.length - 1) {\n        // Entri terakhir: gunakan bulan saat ini\n        bulan = (dateObj.getMonth() + 1).toString(); // getMonth() 0–11 -> 1–12\n    } else {\n        // Entri sebelumnya: kurangi 1 bulan\n        let adjustedMonth = dateObj.getMonth(); // 0–11\n        adjustedMonth = adjustedMonth === 0 ? 12 : adjustedMonth; // Januari (0) -> Desember (12)\n        bulan = adjustedMonth.toString(); // 1–12\n    }\n    \n    let value = parseFloat(data[i]._value?.toFixed(3) || 0);\n    if (!isNaN(value)) {\n        resultMap[bulan] += value;\n    }\n}\n\n// Map angka ke nama bulan\nconst namaBulan = {\n    \"1\": \"Jan\", \"2\": \"Feb\", \"3\": \"Mar\", \"4\": \"Apr\",\n    \"5\": \"May\", \"6\": \"Jun\", \"7\": \"Jul\", \"8\": \"Aug\",\n    \"9\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\"\n};\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 1; i <= 12; i++) {\n    let bulanStr = i.toString();\n    let value = resultMap[bulanStr];\n    let chartValue;\n\n    if (display_mode.toLowerCase() === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        let bills = value * parseFloat(kwh_price);\n        chartValue = isNaN(bills) ? '0.00' : bills.toFixed(2)\n    }\n\n    result.push({\n        x: namaBulan[bulanStr],\n        y: parseFloat(chartValue),\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh AC\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 1060,
        "wires": [
            [
                "4ede60d68904d235"
            ]
        ]
    },
    {
        "id": "89f46352c472bcf4",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "parsing daily data - ac",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Buat map jam 0–23 dengan default 0\nlet resultMap = {};\nfor (let i = 0; i < 24; i++) {\n    let hourLabel = i.toString().padStart(2, '0') + \":00\";\n    resultMap[hourLabel] = 0;\n}\n\n// Hapus data terakhir (opsional, sesuai dengan kode monthly)\n// if (data.length > 1) {\n//     data.pop(); // buang elemen terakhir\n// }\n\n// Sesuaikan zona WIB (UTC+7) dan jumlahkan value\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    if (isNaN(dateObj.getTime())) {\n        node.warn('Invalid _time at index ' + i + ': ' + data[i]._time);\n        continue;\n    }\n    // Sesuaikan timezone ke WIB (UTC+7)\n    // dateObj.setHours(dateObj.getHours() + 7);\n    let hourLabel = dateObj.getHours().toString().padStart(2, '0') + \":00\";\n    let value = parseFloat(data[i]._value?.toFixed(3) || 0);\n\n    if (!isNaN(value)) {\n        resultMap[hourLabel] += value;\n    } else {\n        node.warn('Invalid value at index ' + i + ': ' + JSON.stringify(data[i]));\n    }\n}\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 0; i < 24; i++) {\n    let hourLabel = i.toString().padStart(2, '0') + \":00\";\n    let value = resultMap[hourLabel];\n    let chartValue;\n\n    if (display_mode.toLowerCase() === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        let bills = value * parseFloat(kwh_price);\n        if (isNaN(bills)) {\n            node.warn('Invalid bills calculation: value=' + value + ', kwh_price=' + kwh_price);\n            chartValue = '0.00';\n        } else {\n            chartValue = bills.toFixed(2)\n        }\n    }\n\n    result.push({\n        x: hourLabel, // label sumbu X\n        y: parseFloat(chartValue), // nilai Y (konversi ke number untuk chart)\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh AC\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 860,
        "wires": [
            [
                "4ede60d68904d235"
            ]
        ]
    },
    {
        "id": "383f18af5a5adc01",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "b05e04e032fa04f1",
        "name": "monthly",
        "rules": [
            {
                "t": "set",
                "p": "aggre",
                "pt": "msg",
                "to": "1d",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "unit",
                "pt": "msg",
                "to": "1mo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 900,
        "wires": [
            [
                "8e1d0958f156a572",
                "e3f84e33b8a018fd",
                "3fae5e631bf29b28",
                "7cdfd1080d8ea505"
            ]
        ]
    },
    {
        "id": "d1e095ead57dd986",
        "type": "ui-button-group",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "",
        "group": "e7dfb8239d607d29",
        "order": 2,
        "width": "4",
        "height": 1,
        "label": "",
        "className": "",
        "rounded": true,
        "useThemeColors": true,
        "passthru": true,
        "options": [
            {
                "label": "Daily",
                "icon": "",
                "value": "daily",
                "valueType": "str",
                "color": "#009933"
            },
            {
                "label": "Monthly",
                "icon": "",
                "value": "monthly",
                "valueType": "str",
                "color": "#999999"
            },
            {
                "label": "Yearly",
                "icon": "",
                "value": "yearly",
                "valueType": "str",
                "color": "#ff6666"
            }
        ],
        "topic": "topic",
        "topicType": "msg",
        "x": 1590,
        "y": 900,
        "wires": [
            [
                "143214739de84a08",
                "91aa588aaeaf3293",
                "4fd6cc10a88294fc"
            ]
        ]
    },
    {
        "id": "91aa588aaeaf3293",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "g": "b05e04e032fa04f1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "daily",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "monthly",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "yearly",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1790,
        "y": 900,
        "wires": [
            [
                "ebb3c9f11e046c4c"
            ],
            [
                "383f18af5a5adc01"
            ],
            [
                "4f33cefc8a1f57bc"
            ]
        ]
    },
    {
        "id": "ebb3c9f11e046c4c",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "b05e04e032fa04f1",
        "name": "daily",
        "rules": [
            {
                "t": "set",
                "p": "aggre",
                "pt": "msg",
                "to": "1h",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "unit",
                "pt": "msg",
                "to": "1d",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 860,
        "wires": [
            [
                "c6e343d80e290fb1",
                "0efd8fc459b17472",
                "48b6c0aab03170ae",
                "bc1cfb77983cf8c0"
            ]
        ]
    },
    {
        "id": "4f33cefc8a1f57bc",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "b05e04e032fa04f1",
        "name": "yearly",
        "rules": [
            {
                "t": "set",
                "p": "aggre",
                "pt": "msg",
                "to": "1mo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "unit",
                "pt": "msg",
                "to": "1y",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 940,
        "wires": [
            [
                "156baf576586dcf4",
                "55e61a2f3b7e9274",
                "c3a4ca517f56aa88",
                "c31608f1c4772aff"
            ]
        ]
    },
    {
        "id": "52f3a1a10458c59d",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "parsing daily data - station",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Buat map jam 0–23 dengan default 0\nlet resultMap = {};\nfor (let i = 0; i < 24; i++) {\n    let hourLabel = i.toString().padStart(2, '0') + \":00\";\n    resultMap[hourLabel] = 0;\n}\n\n// Hapus data terakhir (opsional, sesuai dengan kode monthly)\n// if (data.length > 1) {\n//     data.pop(); // buang elemen terakhir\n// }\n\n// Sesuaikan zona WIB (UTC+7) dan jumlahkan value\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    if (isNaN(dateObj.getTime())) {\n        node.warn('Invalid _time at index ' + i + ': ' + data[i]._time);\n        continue;\n    }\n    // Sesuaikan timezone ke WIB (UTC+7)\n    // dateObj.setHours(dateObj.getHours() + 7);\n    let hourLabel = dateObj.getHours().toString().padStart(2, '0') + \":00\";\n    let value = parseFloat(data[i]._value?.toFixed(3) || 0);\n\n    if (!isNaN(value)) {\n        resultMap[hourLabel] += value;\n    } else {\n        node.warn('Invalid value at index ' + i + ': ' + JSON.stringify(data[i]));\n    }\n}\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 0; i < 24; i++) {\n    let hourLabel = i.toString().padStart(2, '0') + \":00\";\n    let value = resultMap[hourLabel];\n    let chartValue;\n\n    if (display_mode.toLowerCase() === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        let bills = value * parseFloat(kwh_price);\n        if (isNaN(bills)) {\n            node.warn('Invalid bills calculation: value=' + value + ', kwh_price=' + kwh_price);\n            chartValue = '0.00';\n        } else {\n            chartValue = bills.toFixed(2)\n        }\n    }\n\n    result.push({\n        x: hourLabel, // label sumbu X\n        y: parseFloat(chartValue), // nilai Y (konversi ke number untuk chart)\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh Station\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 820,
        "wires": [
            [
                "1945ec49053382a2",
                "4ede60d68904d235"
            ]
        ]
    },
    {
        "id": "6d0a05dfa803b2de",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "parsing monthly data - station",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Buat map tanggal 1–31 dengan default 0\nlet resultMap = {};\nfor (let i = 1; i <= 31; i++) {\n    resultMap[i.toString()] = 0;\n}\n\n// Hapus data terakhir (opsional, hapus baris ini jika tidak diperlukan)\nif (data.length > 1) {\n    data.pop(); // buang elemen terakhir\n}\n\n// Geser tanggal -1 hari (sesuaikan zona WIB) dan jumlahkan value\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    dateObj.setDate(dateObj.getDate() - 1); // geser 1 hari ke belakang untuk WIB\n    let tanggal = dateObj.getDate().toString();\n    let value = parseFloat(data[i]._value?.toFixed(2) || 0);\n\n    if (!isNaN(value)) {\n        resultMap[tanggal] += value;\n    } else {\n        node.warn('Invalid value at index ' + i + ': ' + JSON.stringify(data[i]));\n    }\n}\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 1; i <= 31; i++) {\n    let value = resultMap[i.toString()];\n    let chartValue;\n\n    if (display_mode === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        chartValue = (value * kwh_price).toFixed(2)\n    }\n\n    result.push({\n        x: i.toString(), // label sumbu X\n        y: parseFloat(chartValue), // nilai Y (konversi ke number untuk chart)\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh Station\"; // Can be updated dynamically if needed\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 920,
        "wires": [
            [
                "31b1c58d4c40706f",
                "4ede60d68904d235"
            ]
        ]
    },
    {
        "id": "0cea21f3d5e7d8f0",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "parsing yearly data - station",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Validasi input\nif (!Array.isArray(data)) {\n    data = [];\n}\n\n// Buat map bulan 1–12 dengan default 0\nlet resultMap = {};\nfor (let i = 1; i <= 12; i++) {\n    resultMap[i.toString()] = 0;\n}\n\n// Jumlahkan value berdasarkan bulan dengan penyesuaian WIB\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    if (isNaN(dateObj.getTime())) {\n        continue;\n    }\n    dateObj.setHours(dateObj.getHours() + 7); // Sesuaikan ke WIB (UTC+7)\n    \n    let bulan;\n    if (i === data.length - 1) {\n        // Entri terakhir: gunakan bulan saat ini\n        bulan = (dateObj.getMonth() + 1).toString(); // getMonth() 0–11 -> 1–12\n    } else {\n        // Entri sebelumnya: kurangi 1 bulan\n        let adjustedMonth = dateObj.getMonth(); // 0–11\n        adjustedMonth = adjustedMonth === 0 ? 12 : adjustedMonth; // Januari (0) -> Desember (12)\n        bulan = adjustedMonth.toString(); // 1–12\n    }\n    \n    let value = parseFloat(data[i]._value?.toFixed(3) || 0);\n    if (!isNaN(value)) {\n        resultMap[bulan] += value;\n    }\n}\n\n// Map angka ke nama bulan\nconst namaBulan = {\n    \"1\": \"Jan\", \"2\": \"Feb\", \"3\": \"Mar\", \"4\": \"Apr\",\n    \"5\": \"May\", \"6\": \"Jun\", \"7\": \"Jul\", \"8\": \"Aug\",\n    \"9\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\"\n};\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 1; i <= 12; i++) {\n    let bulanStr = i.toString();\n    let value = resultMap[bulanStr];\n    let chartValue;\n\n    if (display_mode.toLowerCase() === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        let bills = value * parseFloat(kwh_price);\n        chartValue = isNaN(bills) ? '0.00' : bills.toFixed(2)\n    }\n\n    result.push({\n        x: namaBulan[bulanStr],\n        y: parseFloat(chartValue),\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh Station\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 1020,
        "wires": [
            [
                "5fd222fc7fe8d2d2",
                "4ede60d68904d235"
            ]
        ]
    },
    {
        "id": "c6e343d80e290fb1",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query station daily sum",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_st_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n  |> sum()\n",
        "output": "str",
        "x": 2180,
        "y": 520,
        "wires": [
            [
                "34451b42e31095a0"
            ]
        ]
    },
    {
        "id": "34451b42e31095a0",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 2460,
        "y": 620,
        "wires": [
            [
                "8e480b4983a00026"
            ]
        ]
    },
    {
        "id": "8e480b4983a00026",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "total",
        "func": "let display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\nlet estimated, bills;\n\nif (msg.payload.length > 0) {\n    estimated = msg.payload[0]._value;\n} else {\n    estimated = 0;\n}\n\nbills = estimated * kwh_price\n\nif(display_mode == 'kwh'){\n    msg.payload = estimated.toFixed(3)\n    msg.unit_kwh = 'kWh'\n    msg.unit_rp = ''\n} else {\n    msg.payload = bills.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n    msg.unit_kwh = ''\n    msg.unit_rp = 'Rp'\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2690,
        "y": 620,
        "wires": [
            [
                "ef67349ec244aa80"
            ]
        ]
    },
    {
        "id": "0efd8fc459b17472",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query ac daily sum",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_ac_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n  |> sum()\n",
        "output": "str",
        "x": 2170,
        "y": 560,
        "wires": [
            [
                "cd8df39d598e3638"
            ]
        ]
    },
    {
        "id": "c7b6405ebde56455",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 102",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 1880,
        "wires": []
    },
    {
        "id": "7a0daebab981c611",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 103",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 1820,
        "wires": []
    },
    {
        "id": "c2b88bf9eb3ab354",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "name": "Check ON/OFF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 840,
        "y": 1840,
        "wires": [
            [
                "6f2863b0ec2c0a6c"
            ],
            [
                "7ce63f4b2903b186"
            ]
        ]
    },
    {
        "id": "6f2863b0ec2c0a6c",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1820,
        "wires": [
            [
                "daa43040999ecc6d"
            ]
        ]
    },
    {
        "id": "daa43040999ecc6d",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "202 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "202",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1160,
        "y": 1820,
        "wires": [
            [
                "c10315eb82bc4a53",
                "dd58f12dadfeb520"
            ],
            []
        ]
    },
    {
        "id": "7ce63f4b2903b186",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1880,
        "wires": [
            [
                "23b845d9f44855e7"
            ]
        ]
    },
    {
        "id": "23b845d9f44855e7",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "203 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "203",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1170,
        "y": 1880,
        "wires": [
            [
                "fe09bf678cea9818",
                "0d0cb7d3a5bdf158"
            ],
            []
        ]
    },
    {
        "id": "fe09bf678cea9818",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1880,
        "wires": [
            [
                "a414a9df39b998df"
            ]
        ]
    },
    {
        "id": "a414a9df39b998df",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "203 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "203",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1490,
        "y": 1880,
        "wires": [
            [
                "c7b6405ebde56455"
            ],
            []
        ]
    },
    {
        "id": "c10315eb82bc4a53",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1820,
        "wires": [
            [
                "6b672b1678da6a54"
            ]
        ]
    },
    {
        "id": "6b672b1678da6a54",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "202 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "202",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1480,
        "y": 1820,
        "wires": [
            [
                "7a0daebab981c611"
            ],
            []
        ]
    },
    {
        "id": "4c931a6a0e1b8e3f",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 104",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 2160,
        "wires": []
    },
    {
        "id": "508425be13b864ca",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 105",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 2100,
        "wires": []
    },
    {
        "id": "d0b6b7991e04de50",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "name": "Check ON/OFF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 840,
        "y": 2120,
        "wires": [
            [
                "a6f909faec16b9fa"
            ],
            [
                "5c4ebe99021ea22b"
            ]
        ]
    },
    {
        "id": "a6f909faec16b9fa",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2100,
        "wires": [
            [
                "d087477901674244"
            ]
        ]
    },
    {
        "id": "d087477901674244",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "204 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "204",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1160,
        "y": 2100,
        "wires": [
            [
                "656ec3c009a81511",
                "a2e5bd0415a866c1"
            ],
            []
        ]
    },
    {
        "id": "5c4ebe99021ea22b",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2160,
        "wires": [
            [
                "a704471680b53b0e"
            ]
        ]
    },
    {
        "id": "a704471680b53b0e",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "205 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "205",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1170,
        "y": 2160,
        "wires": [
            [
                "1ce27aeff07c0315",
                "a911ca5addb92f92"
            ],
            []
        ]
    },
    {
        "id": "1ce27aeff07c0315",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 2160,
        "wires": [
            [
                "1a9716827058d0f1"
            ]
        ]
    },
    {
        "id": "1a9716827058d0f1",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "205 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "205",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1490,
        "y": 2160,
        "wires": [
            [
                "4c931a6a0e1b8e3f"
            ],
            []
        ]
    },
    {
        "id": "656ec3c009a81511",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 2100,
        "wires": [
            [
                "b94006f83abc0b73"
            ]
        ]
    },
    {
        "id": "b94006f83abc0b73",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "204 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "204",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1480,
        "y": 2100,
        "wires": [
            [
                "508425be13b864ca"
            ],
            []
        ]
    },
    {
        "id": "da5143b5690aa5da",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 250,
        "y": 1840,
        "wires": [
            [
                "a3141c27e66e8f0f",
                "edb1e47fddb71375"
            ]
        ]
    },
    {
        "id": "cbe98b857af34c06",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 106",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2440,
        "wires": []
    },
    {
        "id": "d683f7d541d8b35c",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 107",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2380,
        "wires": []
    },
    {
        "id": "753dd0ea6ca394ef",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "name": "Check ON/OFF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 860,
        "y": 2400,
        "wires": [
            [
                "b26201cfe63a67e3"
            ],
            [
                "2a26356a9df5f444"
            ]
        ]
    },
    {
        "id": "b26201cfe63a67e3",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2380,
        "wires": [
            [
                "bfd0e6d40d850f4d"
            ]
        ]
    },
    {
        "id": "bfd0e6d40d850f4d",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "206 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "206",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1180,
        "y": 2380,
        "wires": [
            [
                "1467f59d84e33d5c",
                "88743b7ddbd7d1a7"
            ],
            []
        ]
    },
    {
        "id": "2a26356a9df5f444",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2440,
        "wires": [
            [
                "12cc8d0637cc6d79"
            ]
        ]
    },
    {
        "id": "12cc8d0637cc6d79",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "207 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "207",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1190,
        "y": 2440,
        "wires": [
            [
                "fe3223043c56204f",
                "b45aaff0724aa071"
            ],
            []
        ]
    },
    {
        "id": "fe3223043c56204f",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 2440,
        "wires": [
            [
                "99f4576d8b87086d"
            ]
        ]
    },
    {
        "id": "99f4576d8b87086d",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "207 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "207",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1510,
        "y": 2440,
        "wires": [
            [
                "cbe98b857af34c06"
            ],
            []
        ]
    },
    {
        "id": "1467f59d84e33d5c",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 2380,
        "wires": [
            [
                "f88308a764dda79e"
            ]
        ]
    },
    {
        "id": "f88308a764dda79e",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "206 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "206",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1500,
        "y": 2380,
        "wires": [
            [
                "d683f7d541d8b35c"
            ],
            []
        ]
    },
    {
        "id": "ba2015c744fb6ce0",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 108",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2720,
        "wires": []
    },
    {
        "id": "bad39a668149574d",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 109",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2660,
        "wires": []
    },
    {
        "id": "da892309e1ed9f1f",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "name": "Check ON/OFF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 860,
        "y": 2680,
        "wires": [
            [
                "a3dcb7ba7de6b08c"
            ],
            [
                "7e3cd5f0bc226256"
            ]
        ]
    },
    {
        "id": "a3dcb7ba7de6b08c",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2660,
        "wires": [
            [
                "356590040f3f1ef8"
            ]
        ]
    },
    {
        "id": "356590040f3f1ef8",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "208 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "208",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1180,
        "y": 2660,
        "wires": [
            [
                "b1d78d3676857a9e",
                "5a50fc634645351e"
            ],
            []
        ]
    },
    {
        "id": "7e3cd5f0bc226256",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2720,
        "wires": [
            [
                "b9565dd59303fa61"
            ]
        ]
    },
    {
        "id": "b9565dd59303fa61",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "209 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "209",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1190,
        "y": 2720,
        "wires": [
            [
                "0a91bc68e3fcf44e",
                "b76c9fb426deb7f2"
            ],
            []
        ]
    },
    {
        "id": "0a91bc68e3fcf44e",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 2720,
        "wires": [
            [
                "bb7e60f03a8d3676"
            ]
        ]
    },
    {
        "id": "bb7e60f03a8d3676",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "209 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "209",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1510,
        "y": 2720,
        "wires": [
            [
                "ba2015c744fb6ce0"
            ],
            []
        ]
    },
    {
        "id": "b1d78d3676857a9e",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 2660,
        "wires": [
            [
                "bd2f11e1ba9c03ee"
            ]
        ]
    },
    {
        "id": "bd2f11e1ba9c03ee",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "208 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "208",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1500,
        "y": 2660,
        "wires": [
            [
                "bad39a668149574d"
            ],
            []
        ]
    },
    {
        "id": "0a0e9004a70783f8",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 260,
        "y": 2400,
        "wires": [
            [
                "80c5373ac8a718aa",
                "5d7898d644f5f298"
            ]
        ]
    },
    {
        "id": "4f7d7143ed588598",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 260,
        "y": 2680,
        "wires": [
            [
                "5a46d9442a8fc6fa",
                "a9c42037981c4210"
            ]
        ]
    },
    {
        "id": "7f77e0f22e7d4e0c",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "mcb nyala, lampu/ac nyala",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "214",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 190,
        "y": 3160,
        "wires": [
            [
                "ddbcfb7f2dc2e701"
            ],
            []
        ]
    },
    {
        "id": "5e26b81165b08536",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 110",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 3380,
        "wires": []
    },
    {
        "id": "ddbcfb7f2dc2e701",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 390,
        "y": 3160,
        "wires": [
            [
                "2c94a8549dbdf7dc"
            ]
        ]
    },
    {
        "id": "2c94a8549dbdf7dc",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "take value from array",
        "func": "let status = msg.payload[0];\nif(status == 0){\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 3160,
        "wires": [
            [
                "a90285f1440a6d7b",
                "558edd805bc9d6cf"
            ]
        ]
    },
    {
        "id": "a90285f1440a6d7b",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 3160,
        "wires": [
            [
                "1c91f4176a9a84a5"
            ]
        ]
    },
    {
        "id": "274fae406f400a35",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "take value from array",
        "func": "let status = msg.payload[0];\nif(status == 0){\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 3340,
        "wires": [
            [
                "e773ded54d3369cb",
                "c08b2f2d282a7bfe"
            ]
        ]
    },
    {
        "id": "7f18a8293aaf5c5d",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 370,
        "y": 3340,
        "wires": [
            [
                "274fae406f400a35"
            ]
        ]
    },
    {
        "id": "e773ded54d3369cb",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 3300,
        "wires": [
            [
                "4f7efcaec2c7b7a5"
            ]
        ]
    },
    {
        "id": "30c2af3e6d8f35d9",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "mcb nyala tapi gaada yang mencet pop up (uw214) jadi dimatiin otomatis (kecuali dari saklat)",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "215",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 360,
        "y": 3260,
        "wires": [
            [
                "7f18a8293aaf5c5d"
            ],
            []
        ]
    },
    {
        "id": "4f7efcaec2c7b7a5",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "text",
                "pt": "msg",
                "to": "Perangkat sudah dimatikan otomatis karena tidak ada orang",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 3300,
        "wires": [
            [
                "7c5658b7134c51ca",
                "f306fcc90aee36d7"
            ]
        ]
    },
    {
        "id": "2652754b3909b5d4",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "d": true,
        "name": "",
        "credtype": "account",
        "account": "1e10677ec0ec9cff",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 1420,
        "y": 3440,
        "wires": [
            [
                "5e26b81165b08536"
            ]
        ]
    },
    {
        "id": "b473dd121961b792",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 970,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "558edd805bc9d6cf",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1>Perangkat aktif di luar jam kerja</h1>",
        "output": "str",
        "x": 740,
        "y": 3220,
        "wires": [
            [
                "b473dd121961b792"
            ]
        ]
    },
    {
        "id": "6cc4ac53ccb43e45",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "1cd08557dec12fd6",
        "group": "cdf9cafb1c03a171",
        "order": 3,
        "width": "4",
        "height": "1",
        "name": "Estimated Monthly Consumption",
        "label": "<p style=\"color: black; font-size: 18px;\">Estimated Monthly Consumption</p>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "30",
        "color": "#000000",
        "wrapText": false,
        "className": "custom-card-energy",
        "x": 1450,
        "y": 260,
        "wires": []
    },
    {
        "id": "23c2f3911ac0297a",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "1cd08557dec12fd6",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 20px;\">{{unit_rp}}</span>\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">{{unit_kwh}}</span>\n</p>",
        "output": "str",
        "x": 1170,
        "y": 260,
        "wires": [
            [
                "6cc4ac53ccb43e45"
            ]
        ]
    },
    {
        "id": "a0676425745cc9fa",
        "type": "ui-table",
        "z": "0c4c075ff349f3df",
        "g": "1cd08557dec12fd6",
        "group": "cdf9cafb1c03a171",
        "name": "",
        "label": "Abnormal Energy Consumption",
        "order": 4,
        "width": "0",
        "height": "0",
        "maxrows": "3",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 1450,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "87f35e0b01c7681d",
        "type": "inject",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "ed7a7888e13d47ef"
            ]
        ]
    },
    {
        "id": "b575cc5693960cac",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "bf3c1235ba28065f",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "ACTitle",
        "label": "<p style=\" font-weight: bold;\">AC</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 880,
        "y": 2860,
        "wires": []
    },
    {
        "id": "cfb451ab2f28d743",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "bf3c1235ba28065f",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 2960,
        "wires": [
            [
                "1ca7748d06f9fcce"
            ]
        ]
    },
    {
        "id": "f7971420d680c232",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "bf3c1235ba28065f",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "AC",
        "label": "AC",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 890,
        "y": 2900,
        "wires": []
    },
    {
        "id": "727ef201dcfc5fe9",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "220V - 117",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "117",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 120,
        "y": 2960,
        "wires": [
            [
                "eacf1adf19ce234b"
            ],
            []
        ]
    },
    {
        "id": "99fa06478fa651e2",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "take value from array",
        "func": "let status = msg.payload[0];\nif(status == 0){\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2960,
        "wires": [
            [
                "cfb451ab2f28d743",
                "eb0dc8ed43664026"
            ]
        ]
    },
    {
        "id": "1ca7748d06f9fcce",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "name": "Check ON/OFF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 2960,
        "wires": [
            [
                "db6cdb59ad7f646d"
            ],
            [
                "161c12d23fa12954"
            ]
        ]
    },
    {
        "id": "db6cdb59ad7f646d",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2940,
        "wires": [
            [
                "f4d74e44bf605afd"
            ]
        ]
    },
    {
        "id": "161c12d23fa12954",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 3000,
        "wires": [
            [
                "460caa30ddf798f4"
            ]
        ]
    },
    {
        "id": "460caa30ddf798f4",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "213 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "213",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1200,
        "y": 3000,
        "wires": [
            [
                "0f75afd1059d76e9",
                "cd61b70ba8b32589"
            ],
            []
        ]
    },
    {
        "id": "eacf1adf19ce234b",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 270,
        "y": 2960,
        "wires": [
            [
                "99fa06478fa651e2",
                "6f6b7f80feec41ed"
            ]
        ]
    },
    {
        "id": "222a5a6eb9b2c1df",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 115",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 2940,
        "wires": []
    },
    {
        "id": "cdddb70c727821bd",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 116",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 3000,
        "wires": []
    },
    {
        "id": "0f75afd1059d76e9",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 3000,
        "wires": [
            [
                "1a8b612d444191b7"
            ]
        ]
    },
    {
        "id": "1a8b612d444191b7",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "213 - OFF",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "213",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1530,
        "y": 3000,
        "wires": [
            [
                "cdddb70c727821bd"
            ],
            []
        ]
    },
    {
        "id": "7e0f7f04b7868272",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "212 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "212",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1520,
        "y": 2940,
        "wires": [
            [
                "222a5a6eb9b2c1df"
            ],
            []
        ]
    },
    {
        "id": "9097dc1cdffe102a",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "send 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 2940,
        "wires": [
            [
                "7e0f7f04b7868272"
            ]
        ]
    },
    {
        "id": "acf9f42adf650d73",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "g": "c39fc7b5e9a078d3",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 1350,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "0894c49948fc64f7",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "g": "83c2f7696324bc71",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 1520,
        "wires": [
            [
                "7fc628411b807ea0"
            ]
        ]
    },
    {
        "id": "7fc628411b807ea0",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "83c2f7696324bc71",
        "name": "Check ON Success",
        "func": "let modbus_value = flow.get('modbus_112') || 0;\nif (modbus_value === 0) {\n    // Failed to turn ON, revert to OFF\n    msg.payload = false;\n    msg.revert = true;\n    msg.text = 'Gagal menyalakan lampu karena di luar jam kerja';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1520,
        "wires": [
            [
                "ea4267b7a874501b"
            ],
            [
                "ed0894fb748725ca",
                "958a52f1af9e40b4",
                "7ff56422aff11506"
            ]
        ]
    },
    {
        "id": "ed678fe46f78f827",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "83c2f7696324bc71",
        "name": "Check OFF Success",
        "func": "let modbus_value = flow.get('modbus_112') || 0;\nif (modbus_value === 1) {\n    // Failed to turn OFF, revert to ON\n    msg.payload = true;\n    msg.revert = true;\n    msg.text = 'Gagal mematikan lampu karena lampu dinyalakan dari saklar';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1580,
        "wires": [
            [
                "ea4267b7a874501b"
            ],
            [
                "ed0894fb748725ca",
                "958a52f1af9e40b4",
                "7ff56422aff11506"
            ]
        ]
    },
    {
        "id": "ea4267b7a874501b",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "83c2f7696324bc71",
        "name": "Filter Revert",
        "func": "if (msg.revert === true) {\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1520,
        "wires": [
            [
                "51a3e35e16caba8b"
            ]
        ]
    },
    {
        "id": "ed0894fb748725ca",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "c39fc7b5e9a078d3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h2>{{text}}</h2>",
        "output": "str",
        "x": 1160,
        "y": 1560,
        "wires": [
            [
                "acf9f42adf650d73"
            ]
        ]
    },
    {
        "id": "2ed5c5f398d98802",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "Store Modbus Value",
        "rules": [
            {
                "t": "set",
                "p": "modbus_112",
                "pt": "flow",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "edb1e47fddb71375",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "name": "Store Modbus Value",
        "rules": [
            {
                "t": "set",
                "p": "modbus_113",
                "pt": "flow",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "7e5ed955d38cd9ca",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check ON Success",
        "func": "let modbus_value = flow.get('modbus_113') || 0;\nif (modbus_value === 0) {\n    // Failed to turn ON, revert to OFF\n    msg.payload = false;\n    msg.revert = true;\n    msg.text = 'Gagal menyalakan lampu karena di luar jam kerja';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 1760,
        "wires": [
            [
                "73bcfae8accec72d"
            ],
            [
                "e0efc761f2383039",
                "6ebccb33b19bd9bb",
                "f2d0d28880a64df9"
            ]
        ]
    },
    {
        "id": "23bd9561d570f24a",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check OFF Success",
        "func": "let modbus_value = flow.get('modbus_113') || 0;\nif (modbus_value === 1) {\n    // Failed to turn OFF, revert to ON\n    msg.payload = true;\n    msg.revert = true;\n    msg.text = 'Gagal mematikan lampu karena lampu dinyalakan dari saklar';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 1940,
        "wires": [
            [
                "73bcfae8accec72d"
            ],
            [
                "e0efc761f2383039",
                "6ebccb33b19bd9bb",
                "f2d0d28880a64df9"
            ]
        ]
    },
    {
        "id": "73bcfae8accec72d",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Filter Revert",
        "func": "if (msg.revert === true) {\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 1760,
        "wires": [
            [
                "d60ea610ce92a266"
            ]
        ]
    },
    {
        "id": "e0efc761f2383039",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h2>{{text}}</h2>\n",
        "output": "str",
        "x": 2040,
        "y": 1840,
        "wires": [
            [
                "a38d0f48e1470b0a"
            ]
        ]
    },
    {
        "id": "6ebccb33b19bd9bb",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "function 95",
        "func": "msg.payload = {\n    \"content\": msg.text,\n    \"type\":\"message\",\n    \"chatId\":1242056140\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1900,
        "wires": [
            [
                "c6388f016f571660"
            ]
        ]
    },
    {
        "id": "c6388f016f571660",
        "type": "telegram sender",
        "z": "0c4c075ff349f3df",
        "name": "",
        "bot": "934034b621369e04",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2270,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "a38d0f48e1470b0a",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 2270,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "51498b1b082f7c9f",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check ON Success",
        "func": "let modbus_value = flow.get('modbus_114') || 0;\nif (modbus_value === 0) {\n    // Failed to turn ON, revert to OFF\n    msg.payload = false;\n    msg.revert = true;\n    msg.text = 'Gagal menyalakan lampu karena di luar jam kerja';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 2040,
        "wires": [
            [
                "4bf7d2caefa02eed"
            ],
            [
                "02490a8dcfa96cde",
                "15e23c24353128d5",
                "058ae14eb84ec253"
            ]
        ]
    },
    {
        "id": "4bf7d2caefa02eed",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Filter Revert",
        "func": "if (msg.revert === true) {\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 2040,
        "wires": [
            [
                "2bae3c29fcb58fa3"
            ]
        ]
    },
    {
        "id": "02490a8dcfa96cde",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h2>{{text}}</h2>",
        "output": "str",
        "x": 2040,
        "y": 2120,
        "wires": [
            [
                "333cec9546fa6a4e"
            ]
        ]
    },
    {
        "id": "15e23c24353128d5",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "function 96",
        "func": "msg.payload = {\n    \"content\": msg.text,\n    \"type\":\"message\",\n    \"chatId\":1242056140\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2180,
        "wires": [
            [
                "61bf3f3230ceb390"
            ]
        ]
    },
    {
        "id": "333cec9546fa6a4e",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 2270,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "61bf3f3230ceb390",
        "type": "telegram sender",
        "z": "0c4c075ff349f3df",
        "name": "",
        "bot": "934034b621369e04",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2270,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "12cbfbc75295e069",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check OFF Success",
        "func": "let modbus_value = flow.get('modbus_114') || 0;\nif (modbus_value === 1) {\n    // Failed to turn OFF, revert to ON\n    msg.payload = true;\n    msg.revert = true;\n    msg.text = 'Gagal mematikan lampu karena lampu dinyalakan dari saklar';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 2220,
        "wires": [
            [
                "4bf7d2caefa02eed"
            ],
            [
                "02490a8dcfa96cde",
                "15e23c24353128d5",
                "058ae14eb84ec253"
            ]
        ]
    },
    {
        "id": "1620a25e71d4879e",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "name": "Store Modbus Value",
        "rules": [
            {
                "t": "set",
                "p": "modbus_114",
                "pt": "flow",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "5d7898d644f5f298",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "name": "Store Modbus Value",
        "rules": [
            {
                "t": "set",
                "p": "modbus_115",
                "pt": "flow",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "0856dd0905dd05e0",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check ON Success",
        "func": "let modbus_value = flow.get('modbus_115') || 0;\nif (modbus_value === 0) {\n    // Failed to turn ON, revert to OFF\n    msg.payload = false;\n    msg.revert = true;\n    msg.text = 'Gagal menyalakan lampu karena di luar jam kerja';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 2320,
        "wires": [
            [
                "4970a02c6055600e"
            ],
            [
                "fda54f6623218f9b",
                "daccc04febb28adb",
                "4b24027a6099f317"
            ]
        ]
    },
    {
        "id": "b273955fb9504471",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check OFF Success",
        "func": "let modbus_value = flow.get('modbus_115') || 0;\nif (modbus_value === 1) {\n    // Failed to turn OFF, revert to ON\n    msg.payload = true;\n    msg.revert = true;\n    msg.text = 'Gagal mematikan lampu karena lampu dinyalakan dari saklar';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 2500,
        "wires": [
            [
                "4970a02c6055600e"
            ],
            [
                "fda54f6623218f9b",
                "daccc04febb28adb",
                "4b24027a6099f317"
            ]
        ]
    },
    {
        "id": "4970a02c6055600e",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Filter Revert",
        "func": "if (msg.revert === true) {\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 2320,
        "wires": [
            [
                "ae979b494ec6934c"
            ]
        ]
    },
    {
        "id": "daccc04febb28adb",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "function 97",
        "func": "msg.payload = {\n    \"content\": msg.text,\n    \"type\":\"message\",\n    \"chatId\":1242056140\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 2460,
        "wires": [
            [
                "3e8e3ed317d4c6fb"
            ]
        ]
    },
    {
        "id": "3e8e3ed317d4c6fb",
        "type": "telegram sender",
        "z": "0c4c075ff349f3df",
        "name": "",
        "bot": "934034b621369e04",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2290,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "daa4f145abebdc88",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 2290,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "fda54f6623218f9b",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h2>{{text}}</h2>\n",
        "output": "str",
        "x": 2060,
        "y": 2400,
        "wires": [
            [
                "daa4f145abebdc88"
            ]
        ]
    },
    {
        "id": "2fb4b2c1013888c1",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check ON Success",
        "func": "let modbus_value = flow.get('modbus_116') || 0;\nif (modbus_value === 0) {\n    // Failed to turn ON, revert to OFF\n    msg.payload = false;\n    msg.revert = true;\n    msg.text = 'Gagal menyalakan lampu karena di luar jam kerja';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 2600,
        "wires": [
            [
                "ca672beb7b4aeb5d"
            ],
            [
                "7e70e5ea6c127417",
                "575afb3592287677",
                "3e1e2801508d0966"
            ]
        ]
    },
    {
        "id": "b15f6e8cb558975f",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check OFF Success",
        "func": "let modbus_value = flow.get('modbus_116') || 0;\nif (modbus_value === 1) {\n    // Failed to turn OFF, revert to ON\n    msg.payload = true;\n    msg.revert = true;\n    msg.text = 'Gagal mematikan lampu karena lampu dinyalakan dari saklar';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 2780,
        "wires": [
            [
                "ca672beb7b4aeb5d"
            ],
            [
                "7e70e5ea6c127417",
                "575afb3592287677",
                "3e1e2801508d0966"
            ]
        ]
    },
    {
        "id": "ca672beb7b4aeb5d",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Filter Revert",
        "func": "if (msg.revert === true) {\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 2600,
        "wires": [
            [
                "2f5921b0cbceeaed"
            ]
        ]
    },
    {
        "id": "575afb3592287677",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "function 98",
        "func": "msg.payload = {\n    \"content\": msg.text,\n    \"type\":\"message\",\n    \"chatId\":1242056140\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 2740,
        "wires": [
            [
                "33a50929b909f24b"
            ]
        ]
    },
    {
        "id": "7e70e5ea6c127417",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h2>{{text}}</h2>",
        "output": "str",
        "x": 2060,
        "y": 2680,
        "wires": [
            [
                "bfb77d1b82a7a1d2"
            ]
        ]
    },
    {
        "id": "bfb77d1b82a7a1d2",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 2290,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "33a50929b909f24b",
        "type": "telegram sender",
        "z": "0c4c075ff349f3df",
        "name": "",
        "bot": "934034b621369e04",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2290,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "a9c42037981c4210",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "name": "Store Modbus Value",
        "rules": [
            {
                "t": "set",
                "p": "modbus_116",
                "pt": "flow",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "49c08ddf5ab01741",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 500ms",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1550,
        "y": 2880,
        "wires": [
            [
                "2654f36d16e07707"
            ]
        ]
    },
    {
        "id": "6f6b7f80feec41ed",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "name": "Store Modbus Value",
        "rules": [
            {
                "t": "set",
                "p": "modbus_116",
                "pt": "flow",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "6da0b47b05810d5a",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 500ms",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1530,
        "y": 3060,
        "wires": [
            [
                "d7f53eb18d5a09e0"
            ]
        ]
    },
    {
        "id": "d7f53eb18d5a09e0",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check OFF Success",
        "func": "let modbus_value = flow.get('modbus_116') || 0;\nif (modbus_value === 1) {\n    // Failed to turn OFF, revert to ON\n    msg.payload = true;\n    msg.revert = true;\n    msg.text = 'Gagal mematikan AC';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 3060,
        "wires": [
            [
                "9be8ca50b1bf6783"
            ],
            [
                "e534ccd98cd66909",
                "124df19f7ddd0f96",
                "f8bc5ae73e4b8d5d"
            ]
        ]
    },
    {
        "id": "2654f36d16e07707",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Check ON Success",
        "func": "let modbus_value = flow.get('modbus_116') || 0;\nif (modbus_value === 0) {\n    // Failed to turn ON, revert to OFF\n    msg.payload = false;\n    msg.revert = true;\n    msg.text = 'Gagal menyalakan AC';\n    return [msg, msg];\n}\nreturn [null, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 2880,
        "wires": [
            [
                "9be8ca50b1bf6783"
            ],
            [
                "e534ccd98cd66909",
                "124df19f7ddd0f96",
                "f8bc5ae73e4b8d5d"
            ]
        ]
    },
    {
        "id": "9be8ca50b1bf6783",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "Filter Revert",
        "func": "if (msg.revert === true) {\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "124df19f7ddd0f96",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "function 99",
        "func": "msg.payload = {\n    \"content\": msg.text,\n    \"type\":\"message\",\n    \"chatId\":1242056140\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 3020,
        "wires": [
            [
                "1f668329d0ed9830"
            ]
        ]
    },
    {
        "id": "e534ccd98cd66909",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h2>{{text}}</h2>\n<p>\n    Silakan coba ulang\n</p>",
        "output": "str",
        "x": 2100,
        "y": 2960,
        "wires": [
            [
                "d8a32eb69c780c93"
            ]
        ]
    },
    {
        "id": "d8a32eb69c780c93",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 2330,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "1f668329d0ed9830",
        "type": "telegram sender",
        "z": "0c4c075ff349f3df",
        "name": "",
        "bot": "934034b621369e04",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2330,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "36789ea1256e5973",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "function 100",
        "func": "msg.payload = {\n    \"content\": msg.text,\n    \"type\":\"message\",\n    \"chatId\":1242056140\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3180,
        "wires": [
            [
                "1db30419476c2265"
            ]
        ]
    },
    {
        "id": "1db30419476c2265",
        "type": "telegram sender",
        "z": "0c4c075ff349f3df",
        "name": "",
        "bot": "934034b621369e04",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1390,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "1c91f4176a9a84a5",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "text",
                "pt": "msg",
                "to": "Perangkat aktif di luar jam kerja",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 3160,
        "wires": [
            [
                "36789ea1256e5973",
                "9cd8a815235d049d"
            ]
        ]
    },
    {
        "id": "c08b2f2d282a7bfe",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1>Perangkat dimatikan otomatis</h1>\n",
        "output": "str",
        "x": 760,
        "y": 3340,
        "wires": [
            [
                "364853eb45e76c73"
            ]
        ]
    },
    {
        "id": "7c5658b7134c51ca",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "function 101",
        "func": "msg.payload = {\n    \"content\": msg.text,\n    \"type\":\"message\",\n    \"chatId\":1242056140\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3360,
        "wires": [
            [
                "1195a67430f60c2e"
            ]
        ]
    },
    {
        "id": "1195a67430f60c2e",
        "type": "telegram sender",
        "z": "0c4c075ff349f3df",
        "name": "",
        "bot": "934034b621369e04",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1390,
        "y": 3360,
        "wires": [
            []
        ]
    },
    {
        "id": "364853eb45e76c73",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 950,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "6f7b96b52af0692e",
        "type": "inject",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[0]",
        "payloadType": "json",
        "x": 150,
        "y": 1120,
        "wires": [
            [
                "42fd43f387be2a78"
            ]
        ]
    },
    {
        "id": "adbcdfbc54a909b1",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "formatting time",
        "func": "let start_date = msg.payload.start_date;\nlet start_time = msg.payload.start_time;\nlet end_date = msg.payload.end_date;\nlet end_time = msg.payload.end_time;\n\nlet localStart = new Date(`${start_date}T${start_time}:00+07:00`);\nlet localEnd = new Date(`${end_date}T${end_time}:00+07:00`);\n\nlet timeDiff = localEnd.getTime() - localStart.getTime();\nlet oneWeekInMs = 7 * 24 * 60 * 60 * 1000;\n\nif (localEnd <= localStart) {\n    msg.payload = 0;\n} else {\n    msg.payload = {\n        start: localStart.toISOString(),\n        stop: localEnd.toISOString()\n    };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 3820,
        "wires": [
            [
                "bbb504d6f672b6d3",
                "ecbd287024627a0d",
                "8d3ece8e834a9bdb"
            ]
        ]
    },
    {
        "id": "1dea968f60383be2",
        "type": "ui-form",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "",
        "group": "2a64cc4e22224887",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Start Date",
                "key": "start_date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Start Time",
                "key": "start_time",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "End Date",
                "key": "end_date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "End Time",
                "key": "end_time",
                "type": "time",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "start_date": "",
            "start_time": "",
            "end_date": "",
            "end_time": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "clear",
        "resetOnSubmit": false,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "passthru": false,
        "dropdownOptions": [],
        "x": 290,
        "y": 3820,
        "wires": [
            [
                "adbcdfbc54a909b1"
            ]
        ]
    },
    {
        "id": "ecbd287024627a0d",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "query",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "temp_hum = from(bucket: \"ssl\")\n  |> range(start: {{payload.start}}, stop: {{payload.stop}})\n  |> filter(fn: (r) => \n    r[\"_measurement\"] == \"test_temp_ac\" or \n    r[\"_measurement\"] == \"test_temp_st\" or \n    r[\"_measurement\"] == \"test_hum_ac\" or \n    r[\"_measurement\"] == \"test_hum_st\"\n  )\n  |> aggregateWindow(every: 1h, fn: mean, createEmpty: false)\n  |> pivot(\n    rowKey: [\"_time\"],\n    columnKey: [\"_measurement\"],\n    valueColumn: \"_value\"\n  )\n\nkwh = from(bucket: \"ssl\")\n  |> range(start: {{payload.start}}, stop: {{payload.stop}})\n  |> filter(fn: (r) => \n    r[\"_measurement\"] == \"test_kwh_ac_delta\" or \n    r[\"_measurement\"] == \"test_kwh_st_delta\"\n  )\n  |> aggregateWindow(every: 1h, fn: sum, createEmpty: false)\n  |> pivot(\n    rowKey: [\"_time\"],\n    columnKey: [\"_measurement\"],\n    valueColumn: \"_value\"\n  )\n\njoin(\n  tables: {tempHum: temp_hum, kwh: kwh},\n  on: [\"_time\"]\n)\n|> yield(name: \"combined\")",
        "output": "str",
        "x": 650,
        "y": 3880,
        "wires": [
            [
                "dd1333537483d074"
            ]
        ]
    },
    {
        "id": "bbb504d6f672b6d3",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "clear chart",
        "func": "msg.payload=[]\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3760,
        "wires": [
            [
                "1fa23983bc9ff304"
            ]
        ]
    },
    {
        "id": "dd1333537483d074",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "msg.query",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 900,
        "y": 3880,
        "wires": [
            [
                "86ad28517cddcb59",
                "9afd477070b02522"
            ]
        ]
    },
    {
        "id": "dde7f22c61d652a8",
        "type": "ui-chart",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "group": "0d59589d22e0b138",
        "name": "AC Humidity Chart",
        "label": "",
        "order": 1,
        "chartType": "line",
        "category": "AC Humidity",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "date",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "hum_ac",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "2",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "interpolation": "linear",
        "x": 1530,
        "y": 3780,
        "wires": [
            []
        ]
    },
    {
        "id": "3b8c3ecad380acd6",
        "type": "ui-chart",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "group": "6bff049ca106686c",
        "name": "AC Energy Consumption Chart",
        "label": "",
        "order": 1,
        "chartType": "line",
        "category": "AC Energy",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "date",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "energy_ac",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "2",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "interpolation": "linear",
        "x": 1570,
        "y": 3860,
        "wires": [
            []
        ]
    },
    {
        "id": "970ef19718364aa4",
        "type": "ui-chart",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "group": "71a495db1059609e",
        "name": "Station Energy Consumption Chart",
        "label": "",
        "order": 1,
        "chartType": "line",
        "category": "Station Energy",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "date",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "energy_st",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "2",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "interpolation": "linear",
        "x": 1580,
        "y": 3900,
        "wires": [
            []
        ]
    },
    {
        "id": "48b6c0aab03170ae",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query ac daily ",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_ac_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n",
        "output": "str",
        "x": 2180,
        "y": 860,
        "wires": [
            [
                "b11cef944e3b6ed5"
            ]
        ]
    },
    {
        "id": "bc1cfb77983cf8c0",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query station daily ",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_st_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n",
        "output": "str",
        "x": 2190,
        "y": 820,
        "wires": [
            [
                "bacb03562f8a73bc"
            ]
        ]
    },
    {
        "id": "156baf576586dcf4",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query station yearly sum",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_st_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n  |> sum()\n",
        "output": "str",
        "x": 2190,
        "y": 720,
        "wires": [
            [
                "34451b42e31095a0"
            ]
        ]
    },
    {
        "id": "55e61a2f3b7e9274",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query ac yearly sum",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_ac_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n  |> sum()\n",
        "output": "str",
        "x": 2180,
        "y": 760,
        "wires": [
            [
                "cd8df39d598e3638"
            ]
        ]
    },
    {
        "id": "8e1d0958f156a572",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query ac monthly sum",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_ac_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n  |> sum()\n",
        "output": "str",
        "x": 2180,
        "y": 660,
        "wires": [
            [
                "cd8df39d598e3638"
            ]
        ]
    },
    {
        "id": "e3f84e33b8a018fd",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query station monthly sum",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_st_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n  |> sum()\n",
        "output": "str",
        "x": 2190,
        "y": 620,
        "wires": [
            [
                "34451b42e31095a0"
            ]
        ]
    },
    {
        "id": "56da0dc0ff375c85",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "total",
        "func": "let display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\nlet estimated, bills;\n\nif (msg.payload.length > 0) {\n    estimated = msg.payload[0]._value;\n} else {\n    estimated = 0;\n}\n\nbills = estimated * kwh_price\n\nif(display_mode == 'kwh'){\n    msg.payload = estimated.toFixed(3)\n    msg.unit_kwh = 'kWh'\n    msg.unit_rp = ''\n} else {\n    msg.payload = bills.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n    msg.unit_kwh = ''\n    msg.unit_rp = 'Rp'\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2690,
        "y": 680,
        "wires": [
            [
                "682564fc9d7a171d"
            ]
        ]
    },
    {
        "id": "682564fc9d7a171d",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "9b09a74aebe142e5",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 20px;\">{{unit_rp}}</span>\n    <span style=\"font-size: 30px;\">{{ payload }}</span>\n    <span style=\"font-size: 20px;\">{{unit_kwh}}</span>\n</p>",
        "output": "str",
        "x": 3030,
        "y": 680,
        "wires": [
            [
                "d95a0dec212f5ad5"
            ]
        ]
    },
    {
        "id": "cd8df39d598e3638",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 2460,
        "y": 680,
        "wires": [
            [
                "56da0dc0ff375c85"
            ]
        ]
    },
    {
        "id": "bacb03562f8a73bc",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 2440,
        "y": 820,
        "wires": [
            [
                "52f3a1a10458c59d",
                "e41283aac04daf74",
                "9b36f91847638faa"
            ]
        ]
    },
    {
        "id": "b11cef944e3b6ed5",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 2440,
        "y": 860,
        "wires": [
            [
                "89f46352c472bcf4",
                "13177c5dd237c32f"
            ]
        ]
    },
    {
        "id": "c3a4ca517f56aa88",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query ac yearly",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_ac_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n",
        "output": "str",
        "x": 2180,
        "y": 1060,
        "wires": [
            [
                "8b45316b02f52a38"
            ]
        ]
    },
    {
        "id": "c31608f1c4772aff",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query station yearly",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_st_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n",
        "output": "str",
        "x": 2190,
        "y": 1020,
        "wires": [
            [
                "49b796a2a8a53b0d"
            ]
        ]
    },
    {
        "id": "3fae5e631bf29b28",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query ac monthly",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_ac_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n",
        "output": "str",
        "x": 2190,
        "y": 960,
        "wires": [
            [
                "1d02745cff5bddf2"
            ]
        ]
    },
    {
        "id": "7cdfd1080d8ea505",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "query station monthly",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: {{unit}}))  // awal tahun ini\n  |> filter(fn: (r) => r[\"_measurement\"] == \"test_kwh_st_delta\" and r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: {{aggre}}, fn: sum, createEmpty: false)\n",
        "output": "str",
        "x": 2200,
        "y": 920,
        "wires": [
            [
                "c448052b48af8b53"
            ]
        ]
    },
    {
        "id": "49b796a2a8a53b0d",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 2440,
        "y": 1020,
        "wires": [
            [
                "0cea21f3d5e7d8f0"
            ]
        ]
    },
    {
        "id": "8b45316b02f52a38",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 2440,
        "y": 1060,
        "wires": [
            [
                "f11f2aa3613dd2fd"
            ]
        ]
    },
    {
        "id": "1d02745cff5bddf2",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 2440,
        "y": 960,
        "wires": [
            [
                "a33dece9164e930b"
            ]
        ]
    },
    {
        "id": "c448052b48af8b53",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 2440,
        "y": 920,
        "wires": [
            [
                "6d0a05dfa803b2de"
            ]
        ]
    },
    {
        "id": "4a6b46e141fdc19a",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "set date",
        "func": "let month = (new Date()).getMonth() + 1; \nlet year = 2019;\n\nlet lastDay = new Date(year, month, 0).getDate(); \n\nlet start = `${year}-${month.toString().padStart(2, '0')}-01T00:00:00Z`;\nlet stop = `${year}-${month.toString().padStart(2, '0')}-${lastDay}T23:59:59Z`;\n\nmsg.start = start;\nmsg.stop = stop;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 260,
        "wires": [
            [
                "31d3529239158903"
            ]
        ]
    },
    {
        "id": "10914d6936e5b22c",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 740,
        "y": 260,
        "wires": [
            [
                "dda4d4343307a6fe"
            ]
        ]
    },
    {
        "id": "31d3529239158903",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "monthly estimated",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "from(bucket: \"energy_dummy\")\n  |> range(start: {{start}}, stop: {{stop}})\n  |> filter(fn: (r) => r[\"_measurement\"] == \"energy_forecast\")\n  |> filter(fn: (r) => r[\"_field\"] == \"forecast\")\n  |> aggregateWindow(every: 1mo, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")",
        "output": "str",
        "x": 510,
        "y": 260,
        "wires": [
            [
                "10914d6936e5b22c"
            ]
        ]
    },
    {
        "id": "dda4d4343307a6fe",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "total",
        "func": "let display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\nlet estimated, bills;\n\nif (msg.payload.length > 0) {\n    estimated = msg.payload[0]._value;\n} else {\n    estimated = 0;\n}\n\nbills = estimated * kwh_price\n\nif(display_mode == 'kwh'){\n    msg.payload = estimated.toFixed(3)\n    msg.unit_kwh = 'kWh'\n    msg.unit_rp = ''\n} else {\n    msg.payload = bills.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n    msg.unit_kwh = ''\n    msg.unit_rp = 'Rp'\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 260,
        "wires": [
            [
                "23c2f3911ac0297a"
            ]
        ]
    },
    {
        "id": "ed7a7888e13d47ef",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "set date",
        "func": "let month = (new Date()).getMonth() + 1;  \nlet year = 2019;\n\nlet lastDay = new Date(year, month, 0).getDate(); \n\nlet start = `${year}-${month.toString().padStart(2, '0')}-01T00:00:00Z`;\nlet stop = `${year}-${month.toString().padStart(2, '0')}-${lastDay}T23:59:59Z`;\n\nmsg.start = start;\nmsg.stop = stop;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 320,
        "wires": [
            [
                "716c95bee734ec0f"
            ]
        ]
    },
    {
        "id": "61d8d597b3d41ca6",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "influxdb": "97f0473747ed2726",
        "name": "",
        "query": "{{msg.query}}\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 740,
        "y": 320,
        "wires": [
            [
                "9e9bd772b2a5dcef"
            ]
        ]
    },
    {
        "id": "9e9bd772b2a5dcef",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "parsing data",
        "func": "msg.payload = msg.payload.map(row => {\n    const time = new Date(row._time);\n    time.setDate(time.getDate() - 1);\n    const dateString = time.toISOString().split('T')[0];\n    return {\n        Timestamp: dateString,\n        kWh: Number(row.value).toFixed(3)\n    };\n});\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 320,
        "wires": [
            [
                "a0676425745cc9fa"
            ]
        ]
    },
    {
        "id": "f279765967c6cf6b",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "name": "show dialog",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"groups\":{\"show\":[\"Smart System Laboratory:Setting\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4450,
        "y": 380,
        "wires": [
            [
                "cb4e65e34af49146"
            ]
        ]
    },
    {
        "id": "039fbd569a1edd1b",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 4270,
        "y": 420,
        "wires": [
            [
                "f279765967c6cf6b"
            ],
            [
                "87cb97affd762610"
            ],
            [
                "22cf1ee7fc2deedd"
            ]
        ]
    },
    {
        "id": "cb4e65e34af49146",
        "type": "ui-control",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "name": "",
        "ui": "cd267d1a55d62fea",
        "events": "all",
        "x": 4620,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d4a639ae5c6c7b95",
        "type": "ui-template",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "group": "",
        "page": "2a59f3ad5461f203",
        "ui": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <Teleport v-if=\"mounted\" to=\"#app-bar-actions\">\n    <v-btn-toggle v-model=\"selected\" mandatory>\n      <v-btn\n        :value=\"2\"\n        :height=\"32\"\n        icon=\"mdi-lightning-bolt\"\n        @click=\"send({ payload: 2 })\"\n      ></v-btn>\n      <v-btn\n        :value=\"3\"\n        :height=\"32\"\n        icon=\"mdi-currency-usd\"\n        @click=\"send({ payload: 3 })\"\n      ></v-btn>\n    </v-btn-toggle>\n    <v-btn\n      @click=\"send({ payload: 1 })\"\n      :height=\"32\"\n      border-radius=\"50%\"\n      icon=\"mdi-cog\"\n      class=\"small-btn\"\n      color=\"black\"\n    ></v-btn>\n  </Teleport>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      mounted: false,\n      selected: 2, // Default ke \"lightning bolt\"\n    };\n  },\n  mounted() {\n    this.mounted = true;\n    console.log('Mounted: Sending initial payload: 2');\n    this.send({ payload: 2 }); // Kirim payload 2 saat load\n  },\n};\n</script>\n\n<style scoped>\n.small-btn {\n  width: 32px; /* Membuat tombol bulat dengan lebar sama tinggi */\n}\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "widget:page",
        "className": "",
        "x": 4100,
        "y": 420,
        "wires": [
            [
                "039fbd569a1edd1b",
                "10bf23320515a953"
            ]
        ]
    },
    {
        "id": "87cb97affd762610",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "display_mode",
                "pt": "flow",
                "to": "kwh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4480,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "43c47dbf5169229a",
        "type": "ui-number-input",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "group": "fd1b16af213e2f6f",
        "name": "",
        "label": "Price",
        "order": 2,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "5000",
        "step": "1",
        "tooltip": "",
        "passthru": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "spinner": "stacked",
        "x": 4190,
        "y": 520,
        "wires": [
            [
                "1dd5a1004e69f032"
            ]
        ]
    },
    {
        "id": "1dd5a1004e69f032",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "kwh_price",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4390,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "22cf1ee7fc2deedd",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "display_mode",
                "pt": "flow",
                "to": "bills",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4480,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "cfbc6db43468f215",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "get display mode",
        "func": "msg.payload = flow.get('display_mode')\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 600,
        "wires": [
            [
                "74e7e70ef83bf0dd"
            ]
        ]
    },
    {
        "id": "74e7e70ef83bf0dd",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1730,
        "y": 720,
        "wires": [
            [
                "e35763541fa6ca60"
            ]
        ]
    },
    {
        "id": "4fd6cc10a88294fc",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chart_status",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "e35763541fa6ca60",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "get chart status",
        "func": "msg.payload = flow.get('chart_status')\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 700,
        "wires": [
            [
                "d1e095ead57dd986"
            ]
        ]
    },
    {
        "id": "f7022fe2969225c8",
        "type": "inject",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1630,
        "y": 560,
        "wires": [
            [
                "cfbc6db43468f215",
                "8114799feb28eb77"
            ]
        ]
    },
    {
        "id": "8114799feb28eb77",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "get kwh price",
        "func": "msg.payload = flow.get('kwh_price')\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 560,
        "wires": [
            [
                "34fd81578772c2c3"
            ]
        ]
    },
    {
        "id": "34fd81578772c2c3",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1730,
        "y": 680,
        "wires": [
            [
                "e35763541fa6ca60"
            ]
        ]
    },
    {
        "id": "46824ee568b9461f",
        "type": "file",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "",
        "filename": "public/config/data.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1640,
        "y": 3960,
        "wires": [
            []
        ]
    },
    {
        "id": "6168b10f50e6a2f3",
        "type": "csv",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date,temp_ac,temp_st,hum_ac,hum_st,energy_ac,energy_st",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1450,
        "y": 3960,
        "wires": [
            [
                "46824ee568b9461f"
            ]
        ]
    },
    {
        "id": "9fd11570.93e658",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "cb842c0b08b4f351",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers['Content-Disposition']",
                "pt": "msg",
                "to": "attachment; filename=data.csv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 4040,
        "wires": [
            [
                "1cee4cc9.8a3a13"
            ]
        ]
    },
    {
        "id": "890f4965.8663e8",
        "type": "file in",
        "z": "0c4c075ff349f3df",
        "g": "cb842c0b08b4f351",
        "name": "",
        "filename": "public/config/data.csv",
        "filenameType": "str",
        "format": "",
        "sendError": true,
        "allProps": false,
        "x": 920,
        "y": 4040,
        "wires": [
            [
                "9fd11570.93e658"
            ]
        ]
    },
    {
        "id": "1cee4cc9.8a3a13",
        "type": "http response",
        "z": "0c4c075ff349f3df",
        "g": "cb842c0b08b4f351",
        "name": "",
        "x": 1570,
        "y": 4040,
        "wires": []
    },
    {
        "id": "d8d2e890.9126e8",
        "type": "http in",
        "z": "0c4c075ff349f3df",
        "g": "cb842c0b08b4f351",
        "name": "",
        "url": "/hist_data",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 700,
        "y": 4040,
        "wires": [
            [
                "890f4965.8663e8"
            ]
        ]
    },
    {
        "id": "86ad28517cddcb59",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 3880,
        "wires": [
            [
                "af6db05e4ff33d66"
            ],
            [
                "cf03713852ece1c1"
            ]
        ]
    },
    {
        "id": "af6db05e4ff33d66",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "019b56bbd47bd417",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1>Tidak ada data pada range tanggal tersebut</h1>",
        "output": "str",
        "x": 800,
        "y": 3800,
        "wires": [
            [
                "887ba660358910e6"
            ]
        ]
    },
    {
        "id": "887ba660358910e6",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "g": "019b56bbd47bd417",
        "ui": "cd267d1a55d62fea",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "5",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 990,
        "y": 3800,
        "wires": [
            []
        ]
    },
    {
        "id": "8d3ece8e834a9bdb",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 3760,
        "wires": [
            [
                "13706bdee0073a0c"
            ]
        ]
    },
    {
        "id": "13706bdee0073a0c",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "019b56bbd47bd417",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1>Range data tidak valid</h1>\n",
        "output": "str",
        "x": 800,
        "y": 3760,
        "wires": [
            [
                "5c248f00d0a47a87"
            ]
        ]
    },
    {
        "id": "5c248f00d0a47a87",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "g": "019b56bbd47bd417",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 990,
        "y": 3760,
        "wires": [
            []
        ]
    },
    {
        "id": "cf03713852ece1c1",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "parsing data",
        "func": "let data = msg.payload;\n\nlet result = data\n    .filter(item => item && item._time && !isNaN(new Date(item._time).getTime())) // Pastikan item dan _time valid\n    .map(item => {\n        let timeLabel = new Date(item._time);\n        return {\n            date: timeLabel,\n            temp_ac: item.test_temp_ac != null ? parseFloat(item.test_temp_ac.toFixed(2)) : null,\n            temp_st: item.test_temp_st != null ? parseFloat(item.test_temp_st.toFixed(2)) : null,\n            hum_ac: item.test_hum_ac != null ? parseFloat(item.test_hum_ac.toFixed(2)) : null,\n            hum_st: item.test_hum_st != null ? parseFloat(item.test_hum_st.toFixed(2)) : null,\n            energy_ac: item.test_kwh_ac_delta != null ? parseFloat(item.test_kwh_ac_delta.toFixed(2)) : null,\n            energy_st: item.test_kwh_st_delta != null ? parseFloat(item.test_kwh_st_delta.toFixed(2)) : null\n        };\n    });\n\nlet resultCSV = data\n    .filter(item => item && item._time && !isNaN(new Date(item._time).getTime())) // Pastikan item dan _time valid\n    .map(item => {\n        let timeLabel = new Date(item._time);\n        let wibTime = new Date(timeLabel.getTime() + 7 * 60 * 60 * 1000);\n        return {\n            date: wibTime,\n            temp_ac: item.test_temp_ac != null ? parseFloat(item.test_temp_ac.toFixed(2)) : null,\n            temp_st: item.test_temp_st != null ? parseFloat(item.test_temp_st.toFixed(2)) : null,\n            hum_ac: item.test_hum_ac != null ? parseFloat(item.test_hum_ac.toFixed(2)) : null,\n            hum_st: item.test_hum_st != null ? parseFloat(item.test_hum_st.toFixed(2)) : null,\n            energy_ac: item.test_kwh_ac_delta != null ? parseFloat(item.test_kwh_ac_delta.toFixed(2)) : null,\n            energy_st: item.test_kwh_st_delta != null ? parseFloat(item.test_kwh_st_delta.toFixed(2)) : null\n        };\n    });\n\n\nconst batchSize = 10;\nlet index = 0;\nlet interval = setInterval(() => {\n    if (index === 0) {\n        node.send({ payload: [] });\n    }\n\n    if (index >= result.length) {\n        clearInterval(interval);\n        node.send({ csv: resultCSV });\n        return;\n    }\n\n    let batch = result.slice(index, index + batchSize);\n    node.send({ payload: batch, csv: null });\n\n    index += batchSize;\n}, 500);\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 3880,
        "wires": [
            [
                "0ce43c62235dac44",
                "3b8c3ecad380acd6",
                "970ef19718364aa4",
                "7406a020aca10bf3",
                "dde7f22c61d652a8",
                "99a378b909ea5bca",
                "0bc0726ef06a8d63"
            ]
        ]
    },
    {
        "id": "99a378b909ea5bca",
        "type": "ui-chart",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "group": "c3e520e5353ec050",
        "name": "StationTemperature Chart",
        "label": "",
        "order": 2,
        "chartType": "line",
        "category": "Station Temperature",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "date",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "temp_st",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "2",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "interpolation": "linear",
        "x": 1550,
        "y": 3740,
        "wires": [
            []
        ]
    },
    {
        "id": "0ce43c62235dac44",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "set csv to payload",
        "func": "msg.payload = msg.csv\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 3960,
        "wires": [
            [
                "6168b10f50e6a2f3"
            ]
        ]
    },
    {
        "id": "0bc0726ef06a8d63",
        "type": "ui-chart",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "group": "c3e520e5353ec050",
        "name": "AC Temperature Chart",
        "label": "",
        "order": 1,
        "chartType": "line",
        "category": "AC Temperature",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "date",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "temp_ac",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "2",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "interpolation": "linear",
        "x": 1540,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "7406a020aca10bf3",
        "type": "ui-chart",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "group": "0d59589d22e0b138",
        "name": "Station Humidity Chart",
        "label": "",
        "order": 2,
        "chartType": "line",
        "category": "Station Humidity",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "date",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "hum_st",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "2",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "interpolation": "linear",
        "x": 1540,
        "y": 3820,
        "wires": [
            []
        ]
    },
    {
        "id": "07ef1ba22071d4d3",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "total",
        "func": "let display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\nlet bills, totalkWh;\n\nif (msg.payload.length > 0) {\n    totalkWh = msg.payload[0]._value;\n} else {\n    totalkWh = 0;\n}\n\nbills = totalkWh * parseFloat(kwh_price)\n\nif(display_mode == 'kwh'){\n    msg.payload = totalkWh.toFixed(3)\n    msg.unit_kwh = 'kWh'\n    msg.unit_rp = ''\n} else {\n    msg.payload = bills.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n    msg.unit_kwh = ''\n    msg.unit_rp = 'Rp'\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 140,
        "wires": [
            [
                "64734a8a7c4e90f2"
            ]
        ]
    },
    {
        "id": "311e04cbf5b47d84",
        "type": "influxdb in",
        "z": "0c4c075ff349f3df",
        "influxdb": "97f0473747ed2726",
        "name": "today kwh query",
        "query": "import \"date\"\n\nfrom(bucket: \"ssl\")\n  |> range(start: date.truncate(t: now(), unit: 1d))\n  |> filter(fn: (r) => \n    r[\"_measurement\"] == \"test_kwh_ac_delta\" or \n    r[\"_measurement\"] == \"test_kwh_st_delta\"\n  )\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: 1d, fn: sum, createEmpty: false)\n  |> group()\n  |> sum(column: \"_value\") ",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "sslab",
        "x": 500,
        "y": 200,
        "wires": [
            [
                "f5ed01f8bae3a4d3"
            ]
        ]
    },
    {
        "id": "f5ed01f8bae3a4d3",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "total",
        "func": "let display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\nlet bills, totalkWh;\n\nif (msg.payload.length > 0) {\n    totalkWh = msg.payload[0]._value;\n} else {\n    totalkWh = 0;\n}\n\nbills = totalkWh * parseFloat(kwh_price)\n\nif(display_mode == 'kwh'){\n    msg.payload = totalkWh.toFixed(3)\n    msg.unit_kwh = 'kWh'\n    msg.unit_rp = ''\n} else {\n    msg.payload = bills.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n    msg.unit_kwh = ''\n    msg.unit_rp = 'Rp'\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 200,
        "wires": [
            [
                "cf661a0adaaeb2fa"
            ]
        ]
    },
    {
        "id": "0d1ced6f47b7e9f2",
        "type": "ui-template",
        "z": "0c4c075ff349f3df",
        "g": "cb842c0b08b4f351",
        "group": "",
        "page": "aaec5bf6b742cc19",
        "ui": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <Teleport v-if=\"mounted\" to=\"#app-bar-actions\">\n      <v-btn\n      @click=\"send({ payload: 1 })\"\n      :height=\"32\"\n      icon=\"mdi-download\"\n      class=\"small-btn\"\n      color=\"black\"\n    ></v-btn>\n  </Teleport>\n</template>\n\n<script>\n  export default {\n        data() {\n            return {\n                mounted: false\n            }\n        },\n        mounted() {\n            this.mounted = true\n        }\n    }\n</script>\n\n<style scoped>\n.small-btn {\n  width: 32px; /* Membuat tombol bulat dengan lebar sama tinggi */\n}\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "widget:page",
        "className": "",
        "x": 690,
        "y": 4100,
        "wires": [
            [
                "300f4c4132f042a5"
            ]
        ]
    },
    {
        "id": "300f4c4132f042a5",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "g": "cb842c0b08b4f351",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 4100,
        "wires": [
            [
                "12f9bea5958df417"
            ]
        ]
    },
    {
        "id": "12f9bea5958df417",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "cb842c0b08b4f351",
        "name": "set url",
        "func": "msg.payload = {\n    \"url\": \"https://ssl-fti.petra.ac.id/u-os-app-node-red-host/red/hist_data\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 4100,
        "wires": [
            [
                "d4408da90c6a252e"
            ]
        ]
    },
    {
        "id": "d4408da90c6a252e",
        "type": "ui-control",
        "z": "0c4c075ff349f3df",
        "g": "cb842c0b08b4f351",
        "name": "",
        "ui": "cd267d1a55d62fea",
        "events": "all",
        "x": 1260,
        "y": 4100,
        "wires": [
            []
        ]
    },
    {
        "id": "f2d0d28880a64df9",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "name": "",
        "credtype": "account",
        "account": "53f06b1f315314fb",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 2080,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "958a52f1af9e40b4",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "g": "c39fc7b5e9a078d3",
        "name": "",
        "credtype": "account",
        "account": "53f06b1f315314fb",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 1260,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "058ae14eb84ec253",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "name": "",
        "credtype": "account",
        "account": "53f06b1f315314fb",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 2040,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "4b24027a6099f317",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "name": "",
        "credtype": "account",
        "account": "53f06b1f315314fb",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 2060,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "3e1e2801508d0966",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "name": "",
        "credtype": "account",
        "account": "53f06b1f315314fb",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 2060,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "f8bc5ae73e4b8d5d",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "name": "",
        "credtype": "account",
        "account": "53f06b1f315314fb",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 2060,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "9cd8a815235d049d",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "name": "",
        "credtype": "account",
        "account": "53f06b1f315314fb",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 1180,
        "y": 3140,
        "wires": [
            []
        ]
    },
    {
        "id": "1fa23983bc9ff304",
        "type": "link out",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "f34531c1f3354c6e"
        ],
        "x": 505,
        "y": 3760,
        "wires": []
    },
    {
        "id": "f34531c1f3354c6e",
        "type": "link in",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "link in 5",
        "links": [
            "1fa23983bc9ff304"
        ],
        "x": 1315,
        "y": 3700,
        "wires": [
            [
                "0bc0726ef06a8d63",
                "99a378b909ea5bca",
                "dde7f22c61d652a8",
                "7406a020aca10bf3",
                "3b8c3ecad380acd6",
                "970ef19718364aa4"
            ]
        ]
    },
    {
        "id": "a40811912c53b3d6",
        "type": "link in",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "link in 1",
        "links": [
            "bdccb4ca26570d35"
        ],
        "x": 2855,
        "y": 1100,
        "wires": [
            [
                "4ede60d68904d235"
            ]
        ]
    },
    {
        "id": "bdccb4ca26570d35",
        "type": "link out",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "a40811912c53b3d6"
        ],
        "x": 1935,
        "y": 780,
        "wires": []
    },
    {
        "id": "5fd222fc7fe8d2d2",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "debug 121",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3030,
        "y": 1160,
        "wires": []
    },
    {
        "id": "716c95bee734ec0f",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "4e26cb95b01eb7a8",
        "name": "anomaly table",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "from(bucket: \"energy_dummy\")\n  |> range(start: {{start}}, stop: {{stop}})\n  |> filter(fn: (r) => r[\"_measurement\"] == \"anomaly_prediction\")\n  |> filter(fn: (r) => r[\"_field\"] == \"prediction\" or r[\"_field\"] == \"value\")\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> keep(columns: [\"_time\", \"prediction\", \"value\"])\n  |> filter(fn: (r) => r[\"prediction\"] == 1)",
        "output": "str",
        "x": 500,
        "y": 320,
        "wires": [
            [
                "61d8d597b3d41ca6"
            ]
        ]
    },
    {
        "id": "d13bfd0870309ad4",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 123",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 2900,
        "wires": []
    },
    {
        "id": "cd61b70ba8b32589",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "name": "debug 124",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3060,
        "wires": []
    },
    {
        "id": "7a23cd6bc4005aa9",
        "type": "link in",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "link in 4",
        "links": [
            "51a3e35e16caba8b"
        ],
        "x": 575,
        "y": 1320,
        "wires": [
            [
                "983360d0fecd2eac"
            ]
        ]
    },
    {
        "id": "51a3e35e16caba8b",
        "type": "link out",
        "z": "0c4c075ff349f3df",
        "g": "83c2f7696324bc71",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "7a23cd6bc4005aa9"
        ],
        "x": 1005,
        "y": 1520,
        "wires": []
    },
    {
        "id": "22a35be3783efcd2",
        "type": "link in",
        "z": "0c4c075ff349f3df",
        "g": "83c2f7696324bc71",
        "name": "link in 3",
        "links": [
            "86f1103a9be0f9fc"
        ],
        "x": 245,
        "y": 1580,
        "wires": [
            [
                "ca4740fe5dd0bd6f"
            ]
        ]
    },
    {
        "id": "a4c4998235748307",
        "type": "link in",
        "z": "0c4c075ff349f3df",
        "g": "83c2f7696324bc71",
        "name": "link in 2",
        "links": [
            "d08646a1c6e8597e"
        ],
        "x": 255,
        "y": 1520,
        "wires": [
            [
                "0894c49948fc64f7"
            ]
        ]
    },
    {
        "id": "86f1103a9be0f9fc",
        "type": "link out",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "22a35be3783efcd2"
        ],
        "x": 1445,
        "y": 1460,
        "wires": []
    },
    {
        "id": "d08646a1c6e8597e",
        "type": "link out",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "a4c4998235748307"
        ],
        "x": 1445,
        "y": 1320,
        "wires": []
    },
    {
        "id": "e41283aac04daf74",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "debug 125",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2700,
        "y": 1240,
        "wires": []
    },
    {
        "id": "13177c5dd237c32f",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "debug 126",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2670,
        "y": 1280,
        "wires": []
    },
    {
        "id": "7ff56422aff11506",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "c39fc7b5e9a078d3",
        "name": "function 102",
        "func": "msg.payload = {\n    \"content\": msg.text,\n    \"type\":\"message\",\n    \"chatId\":1242056140\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1620,
        "wires": [
            [
                "54faf4acaf3cb869"
            ]
        ]
    },
    {
        "id": "54faf4acaf3cb869",
        "type": "telegram sender",
        "z": "0c4c075ff349f3df",
        "g": "c39fc7b5e9a078d3",
        "name": "",
        "bot": "934034b621369e04",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1650,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "a97864d5cb8569d9",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "take value from array",
        "func": "let status = msg.payload[0];\nif(status == 0){\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 3500,
        "wires": [
            [
                "f3aa73402f5363ce",
                "e99b815124caba4d"
            ]
        ]
    },
    {
        "id": "e7e69fa16f71cf7f",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 330,
        "y": 3500,
        "wires": [
            [
                "a97864d5cb8569d9"
            ]
        ]
    },
    {
        "id": "f3aa73402f5363ce",
        "type": "switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 3500,
        "wires": [
            [
                "9f507fc6df386d40"
            ]
        ]
    },
    {
        "id": "e99b815124caba4d",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1>Mematikan kontaktor</h1>",
        "output": "str",
        "x": 680,
        "y": 3560,
        "wires": [
            [
                "43dd2f2b5ecc758f"
            ]
        ]
    },
    {
        "id": "91aa4e81c5767a18",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "name": "perangkat dimatikan (tiap hari)",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "216",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 140,
        "y": 3500,
        "wires": [
            [
                "e7e69fa16f71cf7f"
            ],
            []
        ]
    },
    {
        "id": "9f507fc6df386d40",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "text",
                "pt": "msg",
                "to": "Mematikan kontaktor",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 3500,
        "wires": [
            [
                "5593be7318464aab",
                "41996ba454485ef2"
            ]
        ]
    },
    {
        "id": "43dd2f2b5ecc758f",
        "type": "ui-notification",
        "z": "0c4c075ff349f3df",
        "ui": "cd267d1a55d62fea",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "3",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 910,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "5593be7318464aab",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "function 103",
        "func": "msg.payload = {\n    \"content\": msg.text,\n    \"type\":\"message\",\n    \"chatId\":1242056140\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3520,
        "wires": [
            [
                "0b569772787dcda8"
            ]
        ]
    },
    {
        "id": "41996ba454485ef2",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "name": "",
        "credtype": "account",
        "account": "53f06b1f315314fb",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 1120,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "0b569772787dcda8",
        "type": "telegram sender",
        "z": "0c4c075ff349f3df",
        "name": "",
        "bot": "934034b621369e04",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1330,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "f4d74e44bf605afd",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "name": "212 - ON",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "212",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1190,
        "y": 2940,
        "wires": [
            [
                "9097dc1cdffe102a",
                "d13bfd0870309ad4"
            ],
            []
        ]
    },
    {
        "id": "f306fcc90aee36d7",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "0c4c075ff349f3df",
        "name": "",
        "credtype": "account",
        "account": "53f06b1f315314fb",
        "text": "text",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 1180,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "9b36f91847638faa",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "3a3d19f483e10800",
        "name": "debug 128",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2680,
        "y": 480,
        "wires": []
    },
    {
        "id": "31b1c58d4c40706f",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "9b09a74aebe142e5",
        "name": "debug 129",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2990,
        "y": 780,
        "wires": []
    },
    {
        "id": "4ede60d68904d235",
        "type": "ui-chart",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "group": "e7dfb8239d607d29",
        "name": "kWh Chart",
        "label": "kWh Chart",
        "order": 3,
        "chartType": "bar",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "time",
        "xAxisProperty": "x",
        "xAxisPropertyType": "property",
        "xAxisType": "category",
        "xAxisFormat": "",
        "xAxisFormatType": "HH:mm:ss",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "y",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "604800",
        "removeOlderPoints": "",
        "colors": [
            "#003f5c",
            "#ff6600",
            "#bc5090",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#000000"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "6",
        "height": "6",
        "className": "chart",
        "interpolation": "linear",
        "x": 3070,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "1945ec49053382a2",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "9b09a74aebe142e5",
        "name": "debug 130",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 820,
        "wires": []
    },
    {
        "id": "92b4258fb1059478",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "parsing daily data - station",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Buat map jam 0–23 dengan default 0\nlet resultMap = {};\nfor (let i = 0; i < 24; i++) {\n    let hourLabel = i.toString().padStart(2, '0') + \":00\";\n    resultMap[hourLabel] = 0;\n}\n\n// Hapus data terakhir (opsional, sesuai dengan kode monthly)\n// if (data.length > 1) {\n//     data.pop(); // buang elemen terakhir\n// }\n\n// Sesuaikan zona WIB (UTC+7) dan jumlahkan value\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    if (isNaN(dateObj.getTime())) {\n        node.warn('Invalid _time at index ' + i + ': ' + data[i]._time);\n        continue;\n    }\n    // Sesuaikan timezone ke WIB (UTC+7)\n    // dateObj.setHours(dateObj.getHours() + 7);\n    let hourLabel = dateObj.getHours().toString().padStart(2, '0') + \":00\";\n    let value = parseFloat(data[i]._value?.toFixed(3) || 0);\n\n    if (!isNaN(value)) {\n        resultMap[hourLabel] += value;\n    } else {\n        node.warn('Invalid value at index ' + i + ': ' + JSON.stringify(data[i]));\n    }\n}\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 0; i < 24; i++) {\n    let hourLabel = i.toString().padStart(2, '0') + \":00\";\n    let value = resultMap[hourLabel];\n    let chartValue;\n\n    if (display_mode.toLowerCase() === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        let bills = value * parseFloat(kwh_price);\n        if (isNaN(bills)) {\n            node.warn('Invalid bills calculation: value=' + value + ', kwh_price=' + kwh_price);\n            chartValue = '0.00';\n        } else {\n            chartValue = bills.toFixed(2)\n        }\n    }\n\n    result.push({\n        x: hourLabel, // label sumbu X\n        y: parseFloat(chartValue), // nilai Y (konversi ke number untuk chart)\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh Station\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3490,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "0e838b6a54fdccc5",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "parsing daily data - ac",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Buat map jam 0–23 dengan default 0\nlet resultMap = {};\nfor (let i = 0; i < 24; i++) {\n    let hourLabel = i.toString().padStart(2, '0') + \":00\";\n    resultMap[hourLabel] = 0;\n}\n\n// Hapus data terakhir (opsional, sesuai dengan kode monthly)\n// if (data.length > 1) {\n//     data.pop(); // buang elemen terakhir\n// }\n\n// Sesuaikan zona WIB (UTC+7) dan jumlahkan value\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    if (isNaN(dateObj.getTime())) {\n        node.warn('Invalid _time at index ' + i + ': ' + data[i]._time);\n        continue;\n    }\n    // Sesuaikan timezone ke WIB (UTC+7)\n    // dateObj.setHours(dateObj.getHours() + 7);\n    let hourLabel = dateObj.getHours().toString().padStart(2, '0') + \":00\";\n    let value = parseFloat(data[i]._value?.toFixed(3) || 0);\n\n    if (!isNaN(value)) {\n        resultMap[hourLabel] += value;\n    } else {\n        node.warn('Invalid value at index ' + i + ': ' + JSON.stringify(data[i]));\n    }\n}\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 0; i < 24; i++) {\n    let hourLabel = i.toString().padStart(2, '0') + \":00\";\n    let value = resultMap[hourLabel];\n    let chartValue;\n\n    if (display_mode.toLowerCase() === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        let bills = value * parseFloat(kwh_price);\n        if (isNaN(bills)) {\n            node.warn('Invalid bills calculation: value=' + value + ', kwh_price=' + kwh_price);\n            chartValue = '0.00';\n        } else {\n            chartValue = bills.toFixed(2)\n        }\n    }\n\n    result.push({\n        x: hourLabel, // label sumbu X\n        y: parseFloat(chartValue), // nilai Y (konversi ke number untuk chart)\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh AC\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "7f2fded398ee6c0d",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "parsing monthly data - station",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Buat map tanggal 1–31 dengan default 0\nlet resultMap = {};\nfor (let i = 1; i <= 31; i++) {\n    resultMap[i.toString()] = 0;\n}\n\n// Hapus data terakhir (opsional, hapus baris ini jika tidak diperlukan)\nif (data.length > 1) {\n    data.pop(); // buang elemen terakhir\n}\n\n// Geser tanggal -1 hari (sesuaikan zona WIB) dan jumlahkan value\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    dateObj.setDate(dateObj.getDate() - 1); // geser 1 hari ke belakang untuk WIB\n    let tanggal = dateObj.getDate().toString();\n    let value = parseFloat(data[i]._value?.toFixed(2) || 0);\n\n    if (!isNaN(value)) {\n        resultMap[tanggal] += value;\n    } else {\n        node.warn('Invalid value at index ' + i + ': ' + JSON.stringify(data[i]));\n    }\n}\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 1; i <= 31; i++) {\n    let value = resultMap[i.toString()];\n    let chartValue;\n\n    if (display_mode === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        chartValue = (value * kwh_price).toFixed(2)\n    }\n\n    result.push({\n        x: i.toString(), // label sumbu X\n        y: parseFloat(chartValue), // nilai Y (konversi ke number untuk chart)\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh Station\"; // Can be updated dynamically if needed\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3490,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "0afd9512f54ee2ea",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "parsing monthly data - ac",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Buat map tanggal 1–31 dengan default 0\nlet resultMap = {};\nfor (let i = 1; i <= 31; i++) {\n    resultMap[i.toString()] = 0;\n}\n\n// Hapus data terakhir (opsional, hapus baris ini jika tidak diperlukan)\nif (data.length > 1) {\n    data.pop(); // buang elemen terakhir\n}\n\n// Geser tanggal -1 hari (sesuaikan zona WIB) dan jumlahkan value\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    dateObj.setDate(dateObj.getDate() - 1); // geser 1 hari ke belakang untuk WIB\n    let tanggal = dateObj.getDate().toString();\n    let value = parseFloat(data[i]._value?.toFixed(2) || 0);\n\n    if (!isNaN(value)) {\n        resultMap[tanggal] += value;\n    } else {\n        node.warn('Invalid value at index ' + i + ': ' + JSON.stringify(data[i]));\n    }\n}\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 1; i <= 31; i++) {\n    let value = resultMap[i.toString()];\n    let chartValue;\n\n    if (display_mode === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        chartValue = (value * kwh_price).toFixed(2)\n    }\n\n    result.push({\n        x: i.toString(), // label sumbu X\n        y: parseFloat(chartValue), // nilai Y (konversi ke number untuk chart)\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh AC\"; // Can be updated dynamically if needed\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3490,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "802eb95cf2ed62c6",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "parsing yearly data - station",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Validasi input\nif (!Array.isArray(data)) {\n    data = [];\n}\n\n// Buat map bulan 1–12 dengan default 0\nlet resultMap = {};\nfor (let i = 1; i <= 12; i++) {\n    resultMap[i.toString()] = 0;\n}\n\n// Jumlahkan value berdasarkan bulan dengan penyesuaian WIB\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    if (isNaN(dateObj.getTime())) {\n        continue;\n    }\n    dateObj.setHours(dateObj.getHours() + 7); // Sesuaikan ke WIB (UTC+7)\n    \n    let bulan;\n    if (i === data.length - 1) {\n        // Entri terakhir: gunakan bulan saat ini\n        bulan = (dateObj.getMonth() + 1).toString(); // getMonth() 0–11 -> 1–12\n    } else {\n        // Entri sebelumnya: kurangi 1 bulan\n        let adjustedMonth = dateObj.getMonth(); // 0–11\n        adjustedMonth = adjustedMonth === 0 ? 12 : adjustedMonth; // Januari (0) -> Desember (12)\n        bulan = adjustedMonth.toString(); // 1–12\n    }\n    \n    let value = parseFloat(data[i]._value?.toFixed(3) || 0);\n    if (!isNaN(value)) {\n        resultMap[bulan] += value;\n    }\n}\n\n// Map angka ke nama bulan\nconst namaBulan = {\n    \"1\": \"Jan\", \"2\": \"Feb\", \"3\": \"Mar\", \"4\": \"Apr\",\n    \"5\": \"May\", \"6\": \"Jun\", \"7\": \"Jul\", \"8\": \"Aug\",\n    \"9\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\"\n};\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 1; i <= 12; i++) {\n    let bulanStr = i.toString();\n    let value = resultMap[bulanStr];\n    let chartValue;\n\n    if (display_mode.toLowerCase() === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        let bills = value * parseFloat(kwh_price);\n        chartValue = isNaN(bills) ? '0.00' : bills.toFixed(2)\n    }\n\n    result.push({\n        x: namaBulan[bulanStr],\n        y: parseFloat(chartValue),\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh Station\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "560e32e33a81c583",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "parsing yearly data - ac",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Validasi input\nif (!Array.isArray(data)) {\n    data = [];\n}\n\n// Buat map bulan 1–12 dengan default 0\nlet resultMap = {};\nfor (let i = 1; i <= 12; i++) {\n    resultMap[i.toString()] = 0;\n}\n\n// Jumlahkan value berdasarkan bulan dengan penyesuaian WIB\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    if (isNaN(dateObj.getTime())) {\n        continue;\n    }\n    dateObj.setHours(dateObj.getHours() + 7); // Sesuaikan ke WIB (UTC+7)\n    \n    let bulan;\n    if (i === data.length - 1) {\n        // Entri terakhir: gunakan bulan saat ini\n        bulan = (dateObj.getMonth() + 1).toString(); // getMonth() 0–11 -> 1–12\n    } else {\n        // Entri sebelumnya: kurangi 1 bulan\n        let adjustedMonth = dateObj.getMonth(); // 0–11\n        adjustedMonth = adjustedMonth === 0 ? 12 : adjustedMonth; // Januari (0) -> Desember (12)\n        bulan = adjustedMonth.toString(); // 1–12\n    }\n    \n    let value = parseFloat(data[i]._value?.toFixed(3) || 0);\n    if (!isNaN(value)) {\n        resultMap[bulan] += value;\n    }\n}\n\n// Map angka ke nama bulan\nconst namaBulan = {\n    \"1\": \"Jan\", \"2\": \"Feb\", \"3\": \"Mar\", \"4\": \"Apr\",\n    \"5\": \"May\", \"6\": \"Jun\", \"7\": \"Jul\", \"8\": \"Aug\",\n    \"9\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\"\n};\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 1; i <= 12; i++) {\n    let bulanStr = i.toString();\n    let value = resultMap[bulanStr];\n    let chartValue;\n\n    if (display_mode.toLowerCase() === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        let bills = value * parseFloat(kwh_price);\n        chartValue = isNaN(bills) ? '0.00' : bills.toFixed(2)\n    }\n\n    result.push({\n        x: namaBulan[bulanStr],\n        y: parseFloat(chartValue),\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh AC\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3490,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "1e167fb007459d62",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "8c182378a8237863",
        "name": "parsing yearly data - station",
        "func": "let data = msg.payload;\nlet display_mode = flow.get('display_mode') || 'kwh';\nlet kwh_price = flow.get('kwh_price') || 1035;\n\n// Buat map bulan 1–12 dengan default 0\nlet resultMap = {};\nfor (let i = 1; i <= 12; i++) {\n    resultMap[i.toString()] = 0;\n}\n\n// Jumlahkan value berdasarkan bulan (tanpa geser tanggal)\nfor (let i = 0; i < data.length; i++) {\n    let dateObj = new Date(data[i]._time);\n    let bulan = (dateObj.getMonth()).toString(); // getMonth() hasilnya 0–11\n\n    resultMap[bulan] += parseFloat(data[i]._value?.toFixed(3) || 0);\n}\n\n// Map angka ke nama bulan\nconst namaBulan = {\n    \"1\": \"Jan\", \"2\": \"Feb\", \"3\": \"Mar\", \"4\": \"Apr\",\n    \"5\": \"May\", \"6\": \"Jun\", \"7\": \"Jul\", \"8\": \"Aug\",\n    \"9\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\"\n};\n\n// Ubah ke array untuk chart\nlet result = [];\nfor (let i = 1; i <= 12; i++) {\n    let bulanStr = i.toString();\n    let value = resultMap[bulanStr];\n    let chartValue;\n\n    if (display_mode === 'kwh') {\n        chartValue = value.toFixed(3);\n    } else {\n        chartValue = (value * kwh_price).toFixed(2)\n    }\n\n    result.push({\n        x: namaBulan[bulanStr], // label sumbu X\n        y: parseFloat(chartValue), // nilai Y (konversi ke number untuk chart)\n    });\n}\n\nmsg.payload = result;\nmsg.topic = \"kWh Station\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3140,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "94fdbfd615d58c11",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "fd1b16af213e2f6f",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "kWh Price",
        "label": "<p style=\" font-weight: bold;\">kWh Price</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 2270,
        "y": 80,
        "wires": []
    },
    {
        "id": "afc3b86f193f2f9f",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "get form input and send 1",
        "func": "let start = msg.payload.start\nlet finish = msg.payload.finish\n\nlet [start_hour, start_minute] = start.split(\":\").map(Number);\nlet [finish_hour, finish_minute] = finish.split(\":\").map(Number);\n\nmsg.start_hour = start_hour;\nmsg.start_minute = start_minute;\nmsg.finish_hour = finish_hour;\nmsg.finish_minute = finish_minute;\n\nflow.set('start_hour', start_hour)\nflow.set('start_minute', start_minute)\nflow.set('finish_hour', finish_hour)\nflow.set('finish_minute', finish_minute)\n\nmsg.payload = 1\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4310,
        "y": 720,
        "wires": [
            [
                "a772b58dac229bc6"
            ]
        ]
    },
    {
        "id": "1193f15cba69e019",
        "type": "ui-form",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "",
        "group": "fd1b16af213e2f6f",
        "label": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Start",
                "key": "start",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "Finsh",
                "key": "finish",
                "type": "time",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "start": "",
            "finish": ""
        },
        "payload": "",
        "submit": "Submit Working Hour",
        "cancel": "",
        "resetOnSubmit": true,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "passthru": false,
        "dropdownOptions": [],
        "x": 4110,
        "y": 720,
        "wires": [
            [
                "afc3b86f193f2f9f"
            ]
        ]
    },
    {
        "id": "a772b58dac229bc6",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "217 - Submit",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "217",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 4510,
        "y": 720,
        "wires": [
            [
                "a3b06288849b7c3c",
                "6c719948f3f05b6e",
                "3bda8b55e564c31c",
                "8a06015ea53e1916"
            ],
            []
        ]
    },
    {
        "id": "a3b06288849b7c3c",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "start_hour",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4740,
        "y": 660,
        "wires": [
            [
                "d5043759c34b72e6"
            ]
        ]
    },
    {
        "id": "6c719948f3f05b6e",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "start_minute",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4740,
        "y": 700,
        "wires": [
            [
                "59834c4a243f20e1"
            ]
        ]
    },
    {
        "id": "8a06015ea53e1916",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "finish_minute",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4740,
        "y": 780,
        "wires": [
            [
                "bb87971e1c0826b6"
            ]
        ]
    },
    {
        "id": "3bda8b55e564c31c",
        "type": "change",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "finish_hour",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4740,
        "y": 740,
        "wires": [
            [
                "2616735201f4059a"
            ]
        ]
    },
    {
        "id": "d5043759c34b72e6",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "220 - Start Hour",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "220",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 4920,
        "y": 660,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "59834c4a243f20e1",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "221 - Start Minute",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "221",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 4930,
        "y": 700,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bb87971e1c0826b6",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "223 - Finish Minute",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "223",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 4930,
        "y": 780,
        "wires": [
            [
                "6931191907646130"
            ],
            []
        ]
    },
    {
        "id": "2616735201f4059a",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "222 - Finish Hour",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "222",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 4930,
        "y": 740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f203b5515be86524",
        "type": "modbus-write",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "217 - Submit",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "217",
        "quantity": "1",
        "server": "61e031c9400b9afc",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 5310,
        "y": 780,
        "wires": [
            [
                "20ba707d908605c9"
            ],
            []
        ]
    },
    {
        "id": "6931191907646130",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "send 0",
        "func": "msg.payload = 0\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5110,
        "y": 780,
        "wires": [
            [
                "f203b5515be86524"
            ]
        ]
    },
    {
        "id": "20ba707d908605c9",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "84cb96bc14679f8c",
        "name": "debug 132",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 5510,
        "y": 780,
        "wires": []
    },
    {
        "id": "b93ab88a8d1b195c",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "224 - Start Hour",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "224",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 4860,
        "y": 320,
        "wires": [
            [
                "9217184b2b53b492"
            ],
            []
        ]
    },
    {
        "id": "b79ee89fa022342f",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "225 - Start Minute",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "225",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 4870,
        "y": 360,
        "wires": [
            [
                "596ff8bc0cf750b2"
            ],
            []
        ]
    },
    {
        "id": "59b9d734819ebbce",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "226 - Finish Hour",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "226",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 4860,
        "y": 400,
        "wires": [
            [
                "4ac2a07fa70609cf"
            ],
            []
        ]
    },
    {
        "id": "517e0e8e8b4af996",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "227 - Finish Minute",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "227",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 4870,
        "y": 440,
        "wires": [
            [
                "32553f2fe7a47e6f"
            ],
            []
        ]
    },
    {
        "id": "ba1df04edd8ba9d3",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "parsing",
        "func": "let start_hour = msg.payload.start_hour;\nlet start_minute = msg.payload.start_minute;\nlet finish_hour = msg.payload.finish_hour;\nlet finish_minute = msg.payload.finish_minute;\n\nstart_hour = String(start_hour).padStart(2, '0');\nstart_minute = String(start_minute).padStart(2, '0');\nfinish_hour = String(finish_hour).padStart(2, '0');\nfinish_minute = String(finish_minute).padStart(2, '0');\n\nmsg.payload = start_hour + ':' + start_minute + '  -  ' + finish_hour + ':' + finish_minute;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5340,
        "y": 480,
        "wires": [
            [
                "3f8edcde2cb37b39"
            ]
        ]
    },
    {
        "id": "3f8edcde2cb37b39",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "text label template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<p style=\"text-align: center; color: black;\">\n    <span style=\"font-size: 20px;\">{{ payload }}</span>\n</p>",
        "output": "str",
        "x": 5330,
        "y": 540,
        "wires": [
            [
                "85b26462416fe5ab"
            ]
        ]
    },
    {
        "id": "9217184b2b53b492",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "get value and set topic",
        "func": "msg.payload = msg.payload[0]\nmsg.topic = \"start_hour\"\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5120,
        "y": 320,
        "wires": [
            [
                "266d808c39b7242c"
            ]
        ]
    },
    {
        "id": "596ff8bc0cf750b2",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "get value and set topic",
        "func": "msg.payload = msg.payload[0]\nmsg.topic = \"start_minute\"\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5120,
        "y": 360,
        "wires": [
            [
                "266d808c39b7242c"
            ]
        ]
    },
    {
        "id": "32553f2fe7a47e6f",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "get value and set topic",
        "func": "msg.payload = msg.payload[0]\nmsg.topic = \"finish_minute\"\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5120,
        "y": 440,
        "wires": [
            [
                "266d808c39b7242c"
            ]
        ]
    },
    {
        "id": "4ac2a07fa70609cf",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "get value and set topic",
        "func": "msg.payload = msg.payload[0]\nmsg.topic = \"finish_hour\"\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5120,
        "y": 400,
        "wires": [
            [
                "266d808c39b7242c"
            ]
        ]
    },
    {
        "id": "266d808c39b7242c",
        "type": "join",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 5350,
        "y": 380,
        "wires": [
            [
                "ba1df04edd8ba9d3"
            ]
        ]
    },
    {
        "id": "85b26462416fe5ab",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "7dd5ba394ee10d02",
        "group": "fd1b16af213e2f6f",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Working Hour",
        "label": "<p style=\" font-weight: bold;\">Working Hour</p>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 5520,
        "y": 540,
        "wires": []
    },
    {
        "id": "f0431ce946064f19",
        "type": "base64",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 780,
        "y": 4480,
        "wires": [
            [
                "ce34b817250d4340"
            ]
        ]
    },
    {
        "id": "ce34b817250d4340",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "base64 prefix",
        "func": "msg.payload = 'data:image/png;base64,' + msg.payload;\nmsg.width = 10000;\nmsg.aspect = '16/9';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 4480,
        "wires": [
            [
                "9d1a2184508eafb5"
            ]
        ]
    },
    {
        "id": "9d1a2184508eafb5",
        "type": "ui-template",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "group": "ea10cbec6a80f06a",
        "page": "",
        "ui": "",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div>\n        <!-- Image src: {{ info || 'none' }} -->\n        <v-img\n            v-if=\"msg.payload\"\n            :width=\"msg.width || 150\"\n            cover\n            :src=\"msg.payload\"\n    ></v-img>\n    </div>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1140,
        "y": 4480,
        "wires": [
            []
        ]
    },
    {
        "id": "71066ffcd6971d84",
        "type": "file in",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1100,
        "y": 4400,
        "wires": [
            [
                "f0431ce946064f19"
            ]
        ]
    },
    {
        "id": "6204329e4ee7db8a",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "menentukan nama gambar",
        "func": "    let modbus_113 = msg.payload.modbus_112\n    let modbus_112 = msg.payload.modbus_113\n    let modbus_114 = msg.payload.modbus_114\n    let modbus_115 = msg.payload.modbus_115\n    let modbus_116 = msg.payload.modbus_116\n\n    let index = (modbus_112 << 4) | (modbus_113 << 3) | (modbus_114 << 2) | (modbus_115 << 1) | modbus_116;\n    index = index + 1; \n\n    msg.filename = index <= 32 ? `/public/gambar/${index}.png` : flow.get('msg.filename');\n    flow.set('last_file', msg.filename)\n\n    return msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 4400,
        "wires": [
            [
                "71066ffcd6971d84"
            ]
        ]
    },
    {
        "id": "ed5c7f59f9bf8643",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "220V - 113",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "113",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 4340,
        "wires": [
            [
                "9146f96d3ab7791a"
            ],
            []
        ]
    },
    {
        "id": "7b89f993b676a881",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "220V - 114",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "114",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 4400,
        "wires": [
            [
                "ed1a4e80d9a67870"
            ],
            []
        ]
    },
    {
        "id": "ed1a4e80d9a67870",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 290,
        "y": 4400,
        "wires": [
            [
                "b09ce0aec1db3b8b"
            ]
        ]
    },
    {
        "id": "e46671e5a231d092",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "220V - 115",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "115",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 4460,
        "wires": [
            [
                "7296238294f41daa"
            ],
            []
        ]
    },
    {
        "id": "7296238294f41daa",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 290,
        "y": 4460,
        "wires": [
            [
                "0954ba9c414630b3"
            ]
        ]
    },
    {
        "id": "7289e9dda1c190f7",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "220V - 116",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "116",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 4520,
        "wires": [
            [
                "b936e9d72f9f1516"
            ],
            []
        ]
    },
    {
        "id": "b936e9d72f9f1516",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 290,
        "y": 4520,
        "wires": [
            [
                "ece629d190e90f1b"
            ]
        ]
    },
    {
        "id": "ca4740fe5dd0bd6f",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "g": "83c2f7696324bc71",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 1580,
        "wires": [
            [
                "ed678fe46f78f827"
            ]
        ]
    },
    {
        "id": "dd58f12dadfeb520",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1460,
        "y": 1760,
        "wires": [
            [
                "7e5ed955d38cd9ca"
            ]
        ]
    },
    {
        "id": "0d0cb7d3a5bdf158",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1480,
        "y": 1940,
        "wires": [
            [
                "23bd9561d570f24a"
            ]
        ]
    },
    {
        "id": "a2e5bd0415a866c1",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1500,
        "y": 2040,
        "wires": [
            [
                "51498b1b082f7c9f"
            ]
        ]
    },
    {
        "id": "a911ca5addb92f92",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1480,
        "y": 2220,
        "wires": [
            [
                "12cbfbc75295e069"
            ]
        ]
    },
    {
        "id": "88743b7ddbd7d1a7",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1500,
        "y": 2320,
        "wires": [
            [
                "0856dd0905dd05e0"
            ]
        ]
    },
    {
        "id": "b45aaff0724aa071",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1500,
        "y": 2520,
        "wires": [
            [
                "b273955fb9504471"
            ]
        ]
    },
    {
        "id": "5a50fc634645351e",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1520,
        "y": 2600,
        "wires": [
            [
                "2fb4b2c1013888c1"
            ]
        ]
    },
    {
        "id": "b76c9fb426deb7f2",
        "type": "delay",
        "z": "0c4c075ff349f3df",
        "name": "Wait 1s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1500,
        "y": 2800,
        "wires": [
            [
                "b15f6e8cb558975f"
            ]
        ]
    },
    {
        "id": "bd3fb8a662abb9a4",
        "type": "modbus-read",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "220V - 112",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "112",
        "quantity": "1",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "61e031c9400b9afc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 4280,
        "wires": [
            [
                "05bb609cfc8371e5"
            ],
            []
        ]
    },
    {
        "id": "9146f96d3ab7791a",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 290,
        "y": 4340,
        "wires": [
            [
                "3ed043c359fa14e2"
            ]
        ]
    },
    {
        "id": "05bb609cfc8371e5",
        "type": "rbe",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 290,
        "y": 4280,
        "wires": [
            [
                "a8a9dd53bdcd4aad"
            ]
        ]
    },
    {
        "id": "a8a9dd53bdcd4aad",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "get value and set topic",
        "func": "msg.payload = msg.payload[0]\nmsg.topic = \"modbus_112\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4280,
        "wires": [
            [
                "0e280c66a0ce59cc"
            ]
        ]
    },
    {
        "id": "3ed043c359fa14e2",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "get value and set topic",
        "func": "msg.payload = msg.payload[0]\nmsg.topic = \"modbus_113\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4340,
        "wires": [
            [
                "0e280c66a0ce59cc"
            ]
        ]
    },
    {
        "id": "b09ce0aec1db3b8b",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "get value and set topic",
        "func": "msg.payload = msg.payload[0]\nmsg.topic = \"modbus_114\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4400,
        "wires": [
            [
                "0e280c66a0ce59cc"
            ]
        ]
    },
    {
        "id": "0954ba9c414630b3",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "get value and set topic",
        "func": "msg.payload = msg.payload[0]\nmsg.topic = \"modbus_115\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4460,
        "wires": [
            [
                "0e280c66a0ce59cc"
            ]
        ]
    },
    {
        "id": "ece629d190e90f1b",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "get value and set topic",
        "func": "msg.payload = msg.payload[0]\nmsg.topic = \"modbus_116\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4520,
        "wires": [
            [
                "0e280c66a0ce59cc"
            ]
        ]
    },
    {
        "id": "0e280c66a0ce59cc",
        "type": "join",
        "z": "0c4c075ff349f3df",
        "g": "645828b07d30eca1",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 4400,
        "wires": [
            [
                "6204329e4ee7db8a"
            ]
        ]
    },
    {
        "id": "10bf23320515a953",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "787a9de19914e089",
        "name": "debug 135",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4260,
        "y": 300,
        "wires": []
    },
    {
        "id": "7181364ae85103f5",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "c11645e9e62b025a",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 630,
        "y": 1720,
        "wires": []
    },
    {
        "id": "ea0b4fa7b413c6df",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "c11645e9e62b025a",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Station Bulb Lamp",
        "label": "Station Bulb Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 650,
        "y": 1760,
        "wires": []
    },
    {
        "id": "8b6e7eb7a12bec69",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "c11645e9e62b025a",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 1900,
        "wires": [
            [
                "c2b88bf9eb3ab354"
            ]
        ]
    },
    {
        "id": "6af26037e6d34144",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "g": "9e63b4a70f61af1d",
        "name": "",
        "label": " ",
        "group": "443313f8d084869b",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 730,
        "y": 1420,
        "wires": [
            [
                "4a231e647da17552"
            ]
        ]
    },
    {
        "id": "3785bb257102d584",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "group": "443313f8d084869b",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 990,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f860b2a4b43cf125",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "g": "abd55887175c73a6",
        "group": "443313f8d084869b",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Station Tube Lamp ",
        "label": "Station Tube Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 1010,
        "y": 1320,
        "wires": []
    },
    {
        "id": "d32a4f014238a9b1",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "0cdf7d1165724807",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 670,
        "y": 2180,
        "wires": [
            [
                "d0b6b7991e04de50"
            ]
        ]
    },
    {
        "id": "76f6f969fd2b7c1c",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "0cdf7d1165724807",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 630,
        "y": 2000,
        "wires": []
    },
    {
        "id": "d252090cae7c461e",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "0cdf7d1165724807",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Central Lamp",
        "label": "Central Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 640,
        "y": 2040,
        "wires": []
    },
    {
        "id": "e12878f51a1173da",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "282f559e60ea921e",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 670,
        "y": 2460,
        "wires": [
            [
                "753dd0ea6ca394ef"
            ]
        ]
    },
    {
        "id": "68f0d2efe780134e",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "282f559e60ea921e",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Office Bulb Lamp",
        "label": "Office Bulb Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 670,
        "y": 2340,
        "wires": []
    },
    {
        "id": "a1ee234c4b80f0e0",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "282f559e60ea921e",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 650,
        "y": 2300,
        "wires": []
    },
    {
        "id": "2da917b6875f605c",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "77285032f8e556a2",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 2740,
        "wires": [
            [
                "da892309e1ed9f1f"
            ]
        ]
    },
    {
        "id": "411c789532ec73d1",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "77285032f8e556a2",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "Lamp Title",
        "label": "<p style=\" font-weight: bold;\">Lamp</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 630,
        "y": 2580,
        "wires": []
    },
    {
        "id": "18e2f9d128dc9be2",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "77285032f8e556a2",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "Office Tube Lamp",
        "label": "Office Tube Light",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 650,
        "y": 2620,
        "wires": []
    },
    {
        "id": "eb0dc8ed43664026",
        "type": "ui-switch",
        "z": "0c4c075ff349f3df",
        "name": "",
        "label": " ",
        "group": "13a13ca38ad0736e",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 3020,
        "wires": [
            [
                "1ca7748d06f9fcce"
            ]
        ]
    },
    {
        "id": "42ce026f42cf426c",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "13a13ca38ad0736e",
        "order": 1,
        "width": 1,
        "height": "1",
        "name": "ACTitle",
        "label": "<p style=\" font-weight: bold;\">AC</p>",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "x": 620,
        "y": 2860,
        "wires": []
    },
    {
        "id": "e6e01baf25fe3b9a",
        "type": "ui-text",
        "z": "0c4c075ff349f3df",
        "group": "13a13ca38ad0736e",
        "order": 3,
        "width": 2,
        "height": "1",
        "name": "AC",
        "label": "AC",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "16",
        "color": "#707070",
        "wrapText": false,
        "className": "",
        "x": 630,
        "y": 2900,
        "wires": []
    },
    {
        "id": "62b83121a736d020",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "bb63037382781e3d",
        "name": "debug 139",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 1100,
        "wires": []
    },
    {
        "id": "bf0b50c0499a2a58",
        "type": "function",
        "z": "0c4c075ff349f3df",
        "name": "parsing data",
        "func": "msg.payload = msg.payload.map(row => {\n    const utcDate = new Date(row._time);\n    // Kurangi 1 hari (24 jam * 60 menit * 60 detik * 1000 ms)\n    const adjustedDate = new Date(utcDate.getTime() - 1 * 24 * 60 * 60 * 1000);\n    const dateString = adjustedDate.toISOString().split('T')[0];\n    return {\n        Timestamp: dateString, // Tanggal dikurangi 1 hari\n        kWh: Number(row.value).toFixed(3)\n    };\n});\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e21b46b37a02a7e9",
        "type": "template",
        "z": "0c4c075ff349f3df",
        "name": "query temp near ac",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "temp_hum = from(bucket: \"ssl\")\n  |> range(start: {{payload.start}}, stop: {{payload.stop}})\n  |> filter(fn: (r) => \n    r[\"_measurement\"] == \"test_temp_ac\" or \n    r[\"_measurement\"] == \"test_temp_st\" or \n    r[\"_measurement\"] == \"test_hum_ac\" or \n    r[\"_measurement\"] == \"test_hum_st\"\n  )\n  |> aggregateWindow(every: 1h, fn: mean, createEmpty: true)\n  |> pivot(\n    rowKey: [\"_time\"],\n    columnKey: [\"_measurement\"],\n    valueColumn: \"_value\"\n  )\n\nkwh = from(bucket: \"ssl\")\n  |> range(start: {{payload.start}}, stop: {{payload.stop}})\n  |> filter(fn: (r) => \n    r[\"_measurement\"] == \"test_kwh_ac_delta\" or \n    r[\"_measurement\"] == \"test_kwh_st_delta\"\n  )\n  |> aggregateWindow(every: 1h, fn: sum, createEmpty: true)\n  |> pivot(\n    rowKey: [\"_time\"],\n    columnKey: [\"_measurement\"],\n    valueColumn: \"_value\"\n  )\n\njoin(\n  tables: {tempHum: temp_hum, kwh: kwh},\n  on: [\"_time\"]\n)\n|> yield(name: \"combined\")",
        "output": "str",
        "x": 1630,
        "y": 4400,
        "wires": [
            []
        ]
    },
    {
        "id": "9afd477070b02522",
        "type": "debug",
        "z": "0c4c075ff349f3df",
        "g": "f7ba49029b5ddeed",
        "name": "debug 140",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 3920,
        "wires": []
    },
    {
        "id": "cd267d1a55d62fea",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "appIcon": "https://industrial.petra.ac.id/wp-content/uploads/2024/05/logo-pcu.png",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "page",
        "navigationStyle": "temporary",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": "1",
        "showDisconnectNotification": true
    },
    {
        "id": "cdf9cafb1c03a171",
        "type": "ui-group",
        "name": "Energy Consumption",
        "page": "2a59f3ad5461f203",
        "width": "4",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "group-title",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e7dfb8239d607d29",
        "type": "ui-group",
        "name": "Consumption Details",
        "page": "2a59f3ad5461f203",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "group-title",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "61e031c9400b9afc",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.1.20",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "22816c7c4b8b217f",
        "type": "ui-group",
        "name": "Ambient",
        "page": "2a59f3ad5461f203",
        "width": "2",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "group-title",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e4ad38938390eea8",
        "type": "ui-group",
        "name": "Lamp 1",
        "page": "cb881997c64c132c",
        "width": "2",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2df030eec0b963f9",
        "type": "ui-group",
        "name": "Lamp 2",
        "page": "cb881997c64c132c",
        "width": "2",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "115deef34be5a4ca",
        "type": "ui-group",
        "name": "Lamp 3",
        "page": "cb881997c64c132c",
        "width": "2",
        "height": "1",
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "4f8b5f8971b98bac",
        "type": "ui-group",
        "name": "Lamp 4",
        "page": "cb881997c64c132c",
        "width": "2",
        "height": "1",
        "order": 5,
        "showTitle": false,
        "className": "group",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "22eab354af0683f3",
        "type": "ui-group",
        "name": "Lamp 5",
        "page": "cb881997c64c132c",
        "width": "2",
        "height": "1",
        "order": 6,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "97f0473747ed2726",
        "type": "influxdb",
        "hostname": "203.189.123.207",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "aiot.petra.ac.id",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://203.189.123.207:8086/",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "1e10677ec0ec9cff",
        "type": "node-red-contrib-whatsapp-cmb-account",
        "name": "alvin"
    },
    {
        "id": "bf3c1235ba28065f",
        "type": "ui-group",
        "name": "AC",
        "page": "cb881997c64c132c",
        "width": "2",
        "height": "1",
        "order": 7,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "934034b621369e04",
        "type": "telegram bot",
        "botname": "Smart System Laboratory",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbothost": "0.0.0.0",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "2a64cc4e22224887",
        "type": "ui-group",
        "name": "Form Input Tanggal",
        "page": "aaec5bf6b742cc19",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "0d59589d22e0b138",
        "type": "ui-group",
        "name": "Humidity",
        "page": "aaec5bf6b742cc19",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "group-title",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "6bff049ca106686c",
        "type": "ui-group",
        "name": "Energy Consumption AC",
        "page": "aaec5bf6b742cc19",
        "width": "6",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "group-title",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "71a495db1059609e",
        "type": "ui-group",
        "name": "Energy Consumption Station",
        "page": "aaec5bf6b742cc19",
        "width": "6",
        "height": "1",
        "order": 5,
        "showTitle": true,
        "className": "group-title",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2a59f3ad5461f203",
        "type": "ui-page",
        "name": "Monitoring",
        "ui": "cd267d1a55d62fea",
        "path": "/monitoring",
        "icon": "mdi-home-analytics",
        "layout": "grid",
        "theme": "6a0ae28816e3e4a9",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "1"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "1"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "1"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "fd1b16af213e2f6f",
        "type": "ui-group",
        "name": "Setting",
        "page": "2a59f3ad5461f203",
        "width": "6",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "dialog"
    },
    {
        "id": "c3e520e5353ec050",
        "type": "ui-group",
        "name": "Temperature",
        "page": "aaec5bf6b742cc19",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "group-title",
        "visible": true,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "aaec5bf6b742cc19",
        "type": "ui-page",
        "name": "Historical Data",
        "ui": "cd267d1a55d62fea",
        "path": "/historical",
        "icon": "chart-timeline-variant",
        "layout": "grid",
        "theme": "6a0ae28816e3e4a9",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "1"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "1"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "1"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "53f06b1f315314fb",
        "type": "node-red-contrib-whatsapp-cmb-account",
        "name": "katlyn"
    },
    {
        "id": "ea10cbec6a80f06a",
        "type": "ui-group",
        "name": "Group 16",
        "page": "cb881997c64c132c",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c11645e9e62b025a",
        "type": "ui-group",
        "name": "Station bulb lamp",
        "page": "2a59f3ad5461f203",
        "width": "2",
        "height": "1",
        "order": 9,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "443313f8d084869b",
        "type": "ui-group",
        "name": "Station tube lamp",
        "page": "2a59f3ad5461f203",
        "width": "2",
        "height": "1",
        "order": 8,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "0cdf7d1165724807",
        "type": "ui-group",
        "name": "Central",
        "page": "2a59f3ad5461f203",
        "width": "2",
        "height": "1",
        "order": 7,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "282f559e60ea921e",
        "type": "ui-group",
        "name": "Ofiice bulb lamp",
        "page": "2a59f3ad5461f203",
        "width": "2",
        "height": "1",
        "order": 6,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "77285032f8e556a2",
        "type": "ui-group",
        "name": "Office tube lamp",
        "page": "2a59f3ad5461f203",
        "width": "2",
        "height": "1",
        "order": 5,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "13a13ca38ad0736e",
        "type": "ui-group",
        "name": "ac",
        "page": "2a59f3ad5461f203",
        "width": "2",
        "height": "1",
        "order": 10,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "cb881997c64c132c",
        "type": "ui-page",
        "name": "Control",
        "ui": "cd267d1a55d62fea",
        "path": "/control",
        "icon": "mdi-chandelier",
        "layout": "grid",
        "theme": "6a0ae28816e3e4a9",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "1"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "1"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "1"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "6a0ae28816e3e4a9",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#000000",
            "primary": "#0094ce",
            "bgPage": "#efefef",
            "groupBg": "#ffffff",
            "groupOutline": "#e2e2e2"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "40px",
            "groupGap": "20px",
            "groupBorderRadius": "20px",
            "widgetGap": "12px"
        }
    }
]